<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html><head>
<meta content="text/html; charset=ISO-8859-1" http-equiv="content-type"><title>Drinks vending robot sketch - alanesq.com</title>

</head><body>
Drinks vending robot sketch - <a href="http://www.alanesq.com" target="_top">alanesq.com</a><br>
<br>
<pre><span style="color: rgb(126, 126, 126);">/*</span><br><span style="color: rgb(126, 126, 126);">&nbsp;&nbsp;</span><br><span style="color: rgb(126, 126, 126);">&nbsp;&nbsp;drinks&nbsp;robot&nbsp;-&nbsp;robot&nbsp;to&nbsp;fetch&nbsp;drinks&nbsp;from&nbsp;the&nbsp;vending&nbsp;machine&nbsp;</span><br><span style="color: rgb(126, 126, 126);">&nbsp;&nbsp;May&nbsp;2012&nbsp;-&nbsp;v&nbsp;25/6/12&nbsp;&nbsp;&nbsp;v2.0</span><br><span style="color: rgb(126, 126, 126);">&nbsp;&nbsp;Pins&nbsp;used:</span><br><span style="color: rgb(126, 126, 126);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Motor&nbsp;control&nbsp;on&nbsp;pins&nbsp;4-7</span><br><span style="color: rgb(126, 126, 126);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LCD&nbsp;display&nbsp;on&nbsp;pins&nbsp;36,&nbsp;34,&nbsp;32,&nbsp;30,&nbsp;28&nbsp;and&nbsp;26</span><br><span style="color: rgb(126, 126, 126);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Onboard&nbsp;LED&nbsp;on&nbsp;pin&nbsp;13</span><br><span style="color: rgb(126, 126, 126);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;x&nbsp;ultrasonic&nbsp;range&nbsp;finders&nbsp;on&nbsp;pins&nbsp;front=1,2&nbsp;left=45,44&nbsp;&nbsp;right=43,42</span><br><span style="color: rgb(126, 126, 126);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;button&nbsp;Radio&nbsp;remote&nbsp;receiver&nbsp;on&nbsp;pins&nbsp;8-11</span><br><span style="color: rgb(126, 126, 126);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sounder&nbsp;on&nbsp;pin&nbsp;49</span><br><span style="color: rgb(126, 126, 126);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PS2&nbsp;mouse&nbsp;on&nbsp;68,69&nbsp;(analog&nbsp;pins)</span><br><span style="color: rgb(126, 126, 126);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Cup&nbsp;platform&nbsp;sensor&nbsp;on&nbsp;pin&nbsp;23</span><br><span style="color: rgb(126, 126, 126);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Tri&nbsp;colour&nbsp;LEDs&nbsp;on&nbsp;pins&nbsp;19-21</span><br><span style="color: rgb(126, 126, 126);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;under&nbsp;body&nbsp;lights&nbsp;on&nbsp;pins&nbsp;62-67</span><br><span style="color: rgb(126, 126, 126);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Front&nbsp;bumper&nbsp;sensor&nbsp;on&nbsp;pin&nbsp;18</span><br><span style="color: rgb(126, 126, 126);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Servo&nbsp;for&nbsp;front&nbsp;ultrasonic&nbsp;sensor&nbsp;on&nbsp;pin&nbsp;3</span><br><span style="color: rgb(126, 126, 126);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Battery&nbsp;voltage&nbsp;sensor&nbsp;on&nbsp;pin&nbsp;A0</span><br><span style="color: rgb(126, 126, 126);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br><span style="color: rgb(126, 126, 126);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br><span style="color: rgb(126, 126, 126);">&nbsp;&nbsp;Radio&nbsp;buttons:</span><br><span style="color: rgb(126, 126, 126);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;top&nbsp;button&nbsp;=&nbsp;1,&nbsp;bottom&nbsp;button&nbsp;=&nbsp;3,&nbsp;ringer&nbsp;=&nbsp;4</span><br><span style="color: rgb(126, 126, 126);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;radiobutton&nbsp;stores&nbsp;what&nbsp;button&nbsp;has&nbsp;been&nbsp;pressed</span><br><span style="color: rgb(126, 126, 126);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button&nbsp;3&nbsp;=&nbsp;emerency&nbsp;stop</span><br><span style="color: rgb(126, 126, 126);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button&nbsp;4&nbsp;=&nbsp;call&nbsp;robot&nbsp;to&nbsp;collect&nbsp;cup</span><br><span style="color: rgb(126, 126, 126);">&nbsp;*/</span><br>&nbsp;<br>#include&nbsp;&lt;<span style="color: rgb(204, 102, 0);">LiquidCrystal</span>.h&gt; <span style="color: rgb(126, 126, 126);">// LCD display</span><br>#include&nbsp;<span style="color: rgb(0, 102, 153);">"Ultrasonic.h"</span> <span style="color: rgb(126, 126, 126);">// ultrasonic range finders</span><br>#include&nbsp;&lt;MemoryFree.h&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// discover free ram</span><br>#include&nbsp;&lt;<span style="color: rgb(204, 102, 0);">ps2</span>.h&gt; <span style="color: rgb(126, 126, 126);">// ps2 mouse</span><br>#include&nbsp;&lt;<span style="color: rgb(204, 102, 0);">Servo</span>.h&gt; <span style="color: rgb(126, 126, 126);">// servo for front ultrasonic sensor</span><br>#include&nbsp;&lt;TimerOne.h&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// interrupts using timer1</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;note&nbsp;-&nbsp;to&nbsp;use&nbsp;timer1&nbsp;in&nbsp;this&nbsp;sketch&nbsp;you&nbsp;have&nbsp;to&nbsp;comment&nbsp;out&nbsp;"#define&nbsp;_useTimer1"&nbsp;in&nbsp;the&nbsp;servo.h&nbsp;file&nbsp;(in&nbsp;the&nbsp;servo&nbsp;library)</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;Misc&nbsp;settings</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> mturn = 25000; <span style="color: rgb(126, 126, 126);">// ps2 mouse pixels per 360 turn</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> mcm = 180; <span style="color: rgb(126, 126, 126);">// ps2 mouse pixels per cm of travel forward or back</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// delay between switching relays (to stop spikes on power line upsetting the Arduino)</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">const</span> <span style="color: rgb(204, 102, 0);">int</span> switch_delay = 100;<br><span style="color: rgb(204, 102, 0);">unsigned</span> <span style="color: rgb(204, 102, 0);">long</span> mtime = 0; <span style="color: rgb(126, 126, 126);">// timer to cut power to motors if they are running too long </span><br><span style="color: rgb(204, 102, 0);">int</span> led = 13; <span style="color: rgb(126, 126, 126);">// onboard LED</span><br><span style="color: rgb(204, 102, 0);">int</span> bumper = 18; <span style="color: rgb(126, 126, 126);">// front bumper (fender)</span><br><span style="color: rgb(204, 102, 0);">int</span> batvol = A0; <span style="color: rgb(126, 126, 126);">// Battery voltage sensor </span><br><span style="color: rgb(204, 102, 0);">int</span> cup = 23; <span style="color: rgb(126, 126, 126);">// cup on platform sensor</span><br><span style="color: rgb(204, 102, 0);">String</span> location = <span style="color: rgb(0, 102, 153);">"parked"</span>; <span style="color: rgb(126, 126, 126);">// current location of robot (parked, table, vender)</span><br><span style="color: rgb(204, 102, 0);">int</span> ledr = 19; <span style="color: rgb(126, 126, 126);">// led warning lights (on front risers)</span><br><span style="color: rgb(204, 102, 0);">int</span> ledg = 20; <span style="color: rgb(204, 102, 0);">int</span> ledb = 21; <span style="color: rgb(204, 102, 0);">int</span> uleds[6] = {62,63,64,65,66,67}; <span style="color: rgb(126, 126, 126);">// under body leds</span><br><span style="color: rgb(204, 102, 0);">int</span> sounder = 49; <span style="color: rgb(126, 126, 126);">// sounder</span><br><span style="color: rgb(204, 102, 0);">int</span> radioa = 10; <span style="color: rgb(126, 126, 126);">// 4 button radio remote</span><br><span style="color: rgb(204, 102, 0);">int</span> radiob = 9; <span style="color: rgb(204, 102, 0);">int</span> radioc = 11; <span style="color: rgb(204, 102, 0);">int</span> radiod = 8; <span style="color: rgb(204, 102, 0);">int</span> radiobutton = 0; <span style="color: rgb(126, 126, 126);">// button pressed</span><br><span style="color: rgb(204, 102, 0);">int</span> range; <span style="color: rgb(126, 126, 126);">// current reading on ultrasound range finder</span><br><span style="color: rgb(204, 102, 0);">int</span> left_on = 5; <span style="color: rgb(126, 126, 126);">// left motor on/off</span><br><span style="color: rgb(204, 102, 0);">int</span> right_on = 6; <span style="color: rgb(126, 126, 126);">// right motor on/off</span><br><span style="color: rgb(204, 102, 0);">int</span> left_dir = 4; <span style="color: rgb(126, 126, 126);">// left motor direction select</span><br><span style="color: rgb(204, 102, 0);">int</span> right_dir = 7; <span style="color: rgb(126, 126, 126);">// right motor direction select</span><br><span style="color: rgb(204, 102, 0);">boolean</span> robot_error = <span style="color: rgb(204, 102, 0);">false</span>; <span style="color: rgb(126, 126, 126);">// flag of error occured</span><br><span style="color: rgb(204, 102, 0);">int</span> qtemp = 0; <span style="color: rgb(126, 126, 126);">// general temp variable</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;initialize&nbsp;the&nbsp;lcd&nbsp;display</span><br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">LiquidCrystal</span> lcd(36, 34, 32, 30, 28, 26);<br><span style="color: rgb(126, 126, 126);">//&nbsp;initialise&nbsp;ultrasonic&nbsp;range&nbsp;finder</span><br>&nbsp;&nbsp;Ultrasonic&nbsp;ultrasonic_front(2,1);<br>&nbsp;&nbsp;Ultrasonic&nbsp;ultrasonic_left(44,45);<br>&nbsp;&nbsp;Ultrasonic&nbsp;ultrasonic_right(43,42);<br><span style="color: rgb(126, 126, 126);">//&nbsp;initialise&nbsp;PS2&nbsp;mouse</span><br>&nbsp;&nbsp;PS2Mouse&nbsp;mouse(68,&nbsp;69);<br><span style="color: rgb(126, 126, 126);">//&nbsp;initialise&nbsp;servo</span><br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">Servo</span> myservo; <span style="color: rgb(126, 126, 126);">// create servo object to control a servo</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;motor&nbsp;control&nbsp;</span><br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">const</span> <span style="color: rgb(204, 102, 0);">boolean</span> forward = <span style="color: rgb(0, 102, 153);">LOW</span>;<br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">const</span> <span style="color: rgb(204, 102, 0);">boolean</span> reverse = <span style="color: rgb(0, 102, 153);">HIGH</span>;<br>&nbsp;&nbsp;<br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;---------------------------------------------------------</span><br><span style="color: rgb(204, 102, 0);">void</span> <span style="color: rgb(204, 102, 0);"><b>setup</b></span>() { <span style="color: rgb(126, 126, 126);">//&nbsp;set&nbsp;up&nbsp;servo&nbsp;(front&nbsp;ultrasonic&nbsp;sensor)</span><br>&nbsp;&nbsp;myservo.<span style="color: rgb(204, 102, 0);">attach</span>(3); <span style="color: rgb(126, 126, 126);">// attaches the servo on pin 9 to the servo object </span><br>&nbsp;&nbsp;myservo.<span style="color: rgb(204, 102, 0);">write</span>(90); <span style="color: rgb(126, 126, 126);">// point forward</span><br>&nbsp;&nbsp;<br>&nbsp;&nbsp;<br><span style="color: rgb(126, 126, 126);">//&nbsp;set&nbsp;up&nbsp;the&nbsp;LCD's&nbsp;number&nbsp;of&nbsp;columns&nbsp;and&nbsp;rows:&nbsp;</span><br>&nbsp;&nbsp;&nbsp;lcd.<span style="color: rgb(204, 102, 0);">begin</span>(16, 2);<br><span style="color: rgb(126, 126, 126);">//&nbsp;initialise&nbsp;PS2&nbsp;mouse</span><br>&nbsp;&nbsp;mouse.init();<br><span style="color: rgb(126, 126, 126);">//set&nbsp;pin&nbsp;modes</span><br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">pinMode</span>(left_on, <span style="color: rgb(0, 102, 153);">OUTPUT</span>); &nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">pinMode</span>(right_on, <span style="color: rgb(0, 102, 153);">OUTPUT</span>); &nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">pinMode</span>(left_dir, <span style="color: rgb(0, 102, 153);">OUTPUT</span>); &nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">pinMode</span>(right_dir, <span style="color: rgb(0, 102, 153);">OUTPUT</span>); &nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">pinMode</span>(led, <span style="color: rgb(0, 102, 153);">OUTPUT</span>); &nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">pinMode</span>(radioa, <span style="color: rgb(0, 102, 153);">INPUT</span>); &nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">pinMode</span>(radiob, <span style="color: rgb(0, 102, 153);">INPUT</span>); &nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">pinMode</span>(radioc, <span style="color: rgb(0, 102, 153);">INPUT</span>); &nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">pinMode</span>(radiod, <span style="color: rgb(0, 102, 153);">INPUT</span>); &nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">pinMode</span>(sounder, <span style="color: rgb(0, 102, 153);">OUTPUT</span>); &nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">pinMode</span>(cup, <span style="color: rgb(0, 102, 153);">INPUT</span>); &nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">pinMode</span>(bumper, <span style="color: rgb(0, 102, 153);">INPUT</span>); &nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">pinMode</span>(ledr, <span style="color: rgb(0, 102, 153);">OUTPUT</span>); &nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">pinMode</span>(ledg, <span style="color: rgb(0, 102, 153);">OUTPUT</span>); &nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">pinMode</span>(ledb, <span style="color: rgb(0, 102, 153);">OUTPUT</span>); &nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">for</span> ( <span style="color: rgb(204, 102, 0);">int</span> i = 0 ; i &lt; 6 ; i++) <span style="color: rgb(204, 102, 0);">pinMode</span>(uleds[i], <span style="color: rgb(0, 102, 153);">OUTPUT</span>); <span style="color: rgb(126, 126, 126);">//&nbsp;Make&nbsp;sure&nbsp;led&nbsp;warning&nbsp;lights&nbsp;are&nbsp;all&nbsp;off</span><br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(ledr, <span style="color: rgb(0, 102, 153);">LOW</span>); &nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(ledg, <span style="color: rgb(0, 102, 153);">LOW</span>); &nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(ledb, <span style="color: rgb(0, 102, 153);">LOW</span>); &nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">for</span> ( <span style="color: rgb(204, 102, 0);">int</span> i = 0 ; i &lt; 6 ; i++) <span style="color: rgb(204, 102, 0);">digitalWrite</span>(uleds[i],<span style="color: rgb(0, 102, 153);">LOW</span>); <span style="color: rgb(126, 126, 126);">//&nbsp;Print&nbsp;a&nbsp;message&nbsp;to&nbsp;the&nbsp;LCD.</span><br>&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// read battery voltage and pull out 1st dec place</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">float</span> tvolts = ((<span style="color: rgb(204, 102, 0);">float</span>)<span style="color: rgb(204, 102, 0);">analogRead</span>(batvol) / 24.5 ); <span style="color: rgb(126, 126, 126);">// read voltage</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">float</span> qvolts = tvolts * 10.0;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">float</span> wvolts = (<span style="color: rgb(204, 102, 0);">float</span>)<span style="color: rgb(204, 102, 0);">int</span>(tvolts) * 10.0;<br>&nbsp;&nbsp;&nbsp;lcdshow&nbsp;(&nbsp;<span style="color: rgb(0, 102, 153);">"Venderbot 1.0"</span> , <span style="color: rgb(0, 102, 153);">"Mem"</span> + <span style="color: rgb(204, 102, 0);">String</span>(freeMemory()) + <span style="color: rgb(0, 102, 153);">" Bat"</span> + <span style="color: rgb(204, 102, 0);">String</span>(<span style="color: rgb(204, 102, 0);">int</span>(tvolts)) + <span style="color: rgb(0, 102, 153);">"."</span> + <span style="color: rgb(204, 102, 0);">String</span>(<span style="color: rgb(204, 102, 0);">int</span>(qvolts)-<span style="color: rgb(204, 102, 0);">int</span>(wvolts)) + <span style="color: rgb(0, 102, 153);">"v"</span> );<br>&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(ledr,<span style="color: rgb(0, 102, 153);">HIGH</span>);<br>&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(200);<br>&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(ledr,<span style="color: rgb(0, 102, 153);">LOW</span>);<br>&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(ledg,<span style="color: rgb(0, 102, 153);">HIGH</span>);<br>&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(200);<br>&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(ledg,<span style="color: rgb(0, 102, 153);">LOW</span>);<br>&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(ledb,<span style="color: rgb(0, 102, 153);">HIGH</span>);<br>&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(200);<br>&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(ledb,<span style="color: rgb(0, 102, 153);">LOW</span>);<br>&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(600);<br>&nbsp;&nbsp;&nbsp;underlights&nbsp;(&nbsp;2&nbsp;,&nbsp;50&nbsp;);&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// flash under body lights </span><br>&nbsp;&nbsp;&nbsp;lcdshow&nbsp;(&nbsp;<span style="color: rgb(0, 102, 153);">" "</span> , <span style="color: rgb(0, 102, 153);">" "</span> );<br>&nbsp;&nbsp;&nbsp;<br><span style="color: rgb(126, 126, 126);">//setup&nbsp;radio&nbsp;keyfob&nbsp;button&nbsp;receiver</span><br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(radioa, <span style="color: rgb(0, 102, 153);">HIGH</span>); <span style="color: rgb(126, 126, 126);">//turn on pullup resistor on radio pin</span><br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(radiob, <span style="color: rgb(0, 102, 153);">HIGH</span>); <span style="color: rgb(126, 126, 126);">//turn on pullup resistor on radio pin</span><br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(radioc, <span style="color: rgb(0, 102, 153);">HIGH</span>); <span style="color: rgb(126, 126, 126);">//turn on pullup resistor on radio pin</span><br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(radiod, <span style="color: rgb(0, 102, 153);">HIGH</span>); <span style="color: rgb(126, 126, 126);">//turn on pullup resistor on radio pin</span><br><span style="color: rgb(126, 126, 126);">//turn&nbsp;on&nbsp;internal&nbsp;pullup&nbsp;resistor&nbsp;on&nbsp;cup&nbsp;sensor&nbsp;pin</span><br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(cup, <span style="color: rgb(0, 102, 153);">HIGH</span>); <span style="color: rgb(126, 126, 126);">//turn on pullup resistor on radio pin</span><br><span style="color: rgb(126, 126, 126);">//turn&nbsp;on&nbsp;internal&nbsp;pullup&nbsp;resistor&nbsp;on&nbsp;front&nbsp;bumper&nbsp;sensor&nbsp;pin</span><br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(bumper, <span style="color: rgb(0, 102, 153);">HIGH</span>); <span style="color: rgb(126, 126, 126);">//turn on pullup resistor on radio pin</span><br><span style="color: rgb(126, 126, 126);">//make&nbsp;sure&nbsp;motors&nbsp;are&nbsp;off</span><br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(left_on, <span style="color: rgb(0, 102, 153);">LOW</span>); &nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(right_on, <span style="color: rgb(0, 102, 153);">LOW</span>); <span style="color: rgb(126, 126, 126);">//make&nbsp;sure&nbsp;sounder&nbsp;is&nbsp;off</span><br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(sounder, <span style="color: rgb(0, 102, 153);">LOW</span>); <span style="color: rgb(126, 126, 126);">//&nbsp;Interrupt&nbsp;stuff&nbsp;-&nbsp;initialize&nbsp;Timer1&nbsp;to&nbsp;update&nbsp;every&nbsp;half&nbsp;second</span><br>&nbsp;&nbsp;Timer1.initialize(500000);&nbsp;<span style="color: rgb(126, 126, 126);">// set a timer of length in microseconds ( 1,000,000 = 1 second ) </span><br>&nbsp;&nbsp;Timer1.<span style="color: rgb(204, 102, 0);">attachInterrupt</span>( RoboInter ); <span style="color: rgb(126, 126, 126);">// attach the service routine here</span><br>}&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// end of setup</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;---------------------------------------------------------</span><br><span style="color: rgb(204, 102, 0);">void</span> <span style="color: rgb(204, 102, 0);"><b>loop</b></span>(){ <span style="color: rgb(126, 126, 126);">//loop0</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;make&nbsp;sure&nbsp;no&nbsp;cup&nbsp;on&nbsp;platform</span><br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( readcup() == <span style="color: rgb(0, 102, 153);">"on"</span> ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcdshow(&nbsp;<span style="color: rgb(0, 102, 153);">"Cup on platform"</span> , <span style="color: rgb(0, 102, 153);">"please remove"</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;warning_sound(1);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// sound warning</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">while</span> ( readcup() == <span style="color: rgb(0, 102, 153);">"on"</span> ) <span style="color: rgb(204, 102, 0);">delay</span>(200);<br>&nbsp;&nbsp;}<br><span style="color: rgb(126, 126, 126);">//&nbsp;clear&nbsp;lcd&nbsp;screen</span><br>&nbsp;&nbsp;lcdshow(&nbsp;<span style="color: rgb(0, 102, 153);">" "</span> , <span style="color: rgb(0, 102, 153);">" "</span>);<br><span style="color: rgb(126, 126, 126);">//&nbsp;wait&nbsp;for&nbsp;a&nbsp;radio&nbsp;remote&nbsp;button&nbsp;to&nbsp;be&nbsp;pressed&nbsp;or&nbsp;cup&nbsp;on&nbsp;platform&nbsp;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;lcdshow&nbsp;(&nbsp;<span style="color: rgb(0, 102, 153);">"Waiting...."</span> , <span style="color: rgb(0, 102, 153);">"location="</span> + location );<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> qtmp=0; <span style="color: rgb(126, 126, 126);">// counter</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">while</span> ( radiobutton == 0 &amp;&amp; readcup() == <span style="color: rgb(0, 102, 153);">"off"</span> ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;qtmp&nbsp;=&nbsp;qtmp&nbsp;+&nbsp;1;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// Increment counter</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( qtmp &gt; 10 ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;qtmp&nbsp;=&nbsp;0;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(ledb, <span style="color: rgb(0, 102, 153);">HIGH</span>); <span style="color: rgb(126, 126, 126);">// flash blue led</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(3);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(ledb, <span style="color: rgb(0, 102, 153);">LOW</span>); <span style="color: rgb(126, 126, 126);">// flash blue led</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(300);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;lcdshow(&nbsp;<span style="color: rgb(0, 102, 153);">" "</span> , <span style="color: rgb(0, 102, 153);">" "</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;warning_sound(1);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// sound warning</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;button&nbsp;1&nbsp;-&nbsp;Move</span><br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( radiobutton == 1 ) { &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;radiobutton&nbsp;=&nbsp;0;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// clear radio button pressed flag</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( location == <span style="color: rgb(0, 102, 153);">"table"</span> ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">//table to park</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcdshow&nbsp;(&nbsp;<span style="color: rgb(0, 102, 153);">"Going to park"</span> , <span style="color: rgb(0, 102, 153);">"Bye..."</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_TableToLib();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// move from table to library</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_LibDoorToPark();&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// move from library to park</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;warning_sound(1);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;underlights&nbsp;(&nbsp;1&nbsp;,&nbsp;5&nbsp;);&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// flash under body lights </span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">else</span> <span style="color: rgb(204, 102, 0);">if</span> ( location == <span style="color: rgb(0, 102, 153);">"vender"</span> ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// Move from vending machine to Parlour table</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_VendToLib();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// move from vending machine to Library Door</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_LibToTable();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// move from Library Door to table</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// finished</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(ledr, <span style="color: rgb(0, 102, 153);">LOW</span>); <span style="color: rgb(126, 126, 126);">// warning led off</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;warning_sound(2);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcdshow(&nbsp;<span style="color: rgb(0, 102, 153);">"Finished"</span> , <span style="color: rgb(0, 102, 153);">" "</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">else</span> {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// wrong location</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcdshow(&nbsp;<span style="color: rgb(0, 102, 153);">"Error"</span> , <span style="color: rgb(0, 102, 153);">"wrong location"</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;warning_sound(3);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;}&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// if button 1</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;button&nbsp;2&nbsp;-&nbsp;change&nbsp;location</span><br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( radiobutton == 2 ) { &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;radiobutton&nbsp;=&nbsp;0;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// clear radio button pressed flag</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( location == <span style="color: rgb(0, 102, 153);">"parked"</span> ) location = <span style="color: rgb(0, 102, 153);">"table"</span>; <span style="color: rgb(126, 126, 126);">// set location</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">else</span> <span style="color: rgb(204, 102, 0);">if</span> ( location == <span style="color: rgb(0, 102, 153);">"table"</span> ) location = <span style="color: rgb(0, 102, 153);">"vender"</span>; <span style="color: rgb(126, 126, 126);">// set location</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">else</span> <span style="color: rgb(204, 102, 0);">if</span> ( location == <span style="color: rgb(0, 102, 153);">"vender"</span> ) location = <span style="color: rgb(0, 102, 153);">"parked"</span>; <span style="color: rgb(126, 126, 126);">// set location</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcdshow(&nbsp;<span style="color: rgb(0, 102, 153);">"Location set to"</span> , location );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;warning_sound(1);<br>&nbsp;&nbsp;}&nbsp;<span style="color: rgb(126, 126, 126);">// if button 2</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;button&nbsp;4&nbsp;(bell)&nbsp;-&nbsp;come&nbsp;to&nbsp;table&nbsp;(from&nbsp;parked)</span><br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( radiobutton == 4 ) { &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;radiobutton&nbsp;=&nbsp;0;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// clear radio button pressed flag</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( location == <span style="color: rgb(0, 102, 153);">"parked"</span> ) move_ParkToTable(); <span style="color: rgb(126, 126, 126);">// move from vending machine to parlour table</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">else</span> {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// wrong location</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcdshow(&nbsp;<span style="color: rgb(0, 102, 153);">"Error"</span> , <span style="color: rgb(0, 102, 153);">"wrong location"</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;warning_sound(3);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;}&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// if button 4 (bell)</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;If&nbsp;cup&nbsp;on&nbsp;tray&nbsp;collect&nbsp;a&nbsp;drink</span><br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( readcup() == <span style="color: rgb(0, 102, 153);">"on"</span> ) { <span style="color: rgb(126, 126, 126);">// in case of false alarm - chance to change mind</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcdshow(&nbsp;<span style="color: rgb(0, 102, 153);">"Cup on platform"</span> , <span style="color: rgb(0, 102, 153);">" :-)"</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;underlights&nbsp;(&nbsp;1&nbsp;,&nbsp;8&nbsp;);&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// flash under body lights </span><br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( readcup() == <span style="color: rgb(0, 102, 153);">"on"</span> ) { <span style="color: rgb(126, 126, 126);">// if still on platform then fetch a coffee</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( location == <span style="color: rgb(0, 102, 153);">"table"</span> ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;collectDrink();&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// collect a drink</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">else</span> {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// wrong location</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcdshow(&nbsp;<span style="color: rgb(0, 102, 153);">"Error"</span> , <span style="color: rgb(0, 102, 153);">"wrong location"</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;warning_sound(3);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;}<br><span style="color: rgb(204, 102, 0);">delay</span>(1000);<br>}&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// end of loop</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;---------------------------------------------------------</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;move&nbsp;robot&nbsp;(mode0)</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;inputs&nbsp;are;&nbsp;&nbsp;&nbsp;mode&nbsp;,&nbsp;direction&nbsp;,&nbsp;time&nbsp;to&nbsp;run&nbsp;motors&nbsp;or&nbsp;distance&nbsp;to&nbsp;find&nbsp;,&nbsp;sensor&nbsp;to&nbsp;use</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;note:&nbsp;negative&nbsp;NUM&nbsp;means&nbsp;very&nbsp;slow</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;modes</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;=&nbsp;set&nbsp;time</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;=&nbsp;find&nbsp;a&nbsp;distance&nbsp;(moving&nbsp;towards)</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;=&nbsp;find&nbsp;a&nbsp;distance&nbsp;(moving&nbsp;away&nbsp;from)</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;=&nbsp;until&nbsp;distance&nbsp;greater&nbsp;than</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;=&nbsp;until&nbsp;distance&nbsp;less&nbsp;than</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6&nbsp;=&nbsp;follow&nbsp;wall&nbsp;using&nbsp;sensor&nbsp;for&nbsp;set&nbsp;time</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;=&nbsp;guided&nbsp;by&nbsp;PS2&nbsp;mouse&nbsp;</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;direction&nbsp;=&nbsp;&nbsp;forward&nbsp;,&nbsp;reverse&nbsp;,&nbsp;left&nbsp;or&nbsp;right</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sensor&nbsp;to&nbsp;use&nbsp;=&nbsp;front&nbsp;left&nbsp;or&nbsp;right</span><br><span style="color: rgb(204, 102, 0);">void</span> move_robot ( <span style="color: rgb(204, 102, 0);">int</span> mode , <span style="color: rgb(204, 102, 0);">String</span> direct , <span style="color: rgb(204, 102, 0);">int</span> num , <span style="color: rgb(204, 102, 0);">String</span> sensor ) {<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// check a valid mode was supplied</span><br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( mode &lt; 1 || mode &gt; 7 ) error( <span style="color: rgb(0, 102, 153);">"ERROR (move)"</span> , <span style="color: rgb(0, 102, 153);">"invalid mode"</span> , <span style="color: rgb(0, 102, 153);">"mode="</span> + <span style="color: rgb(204, 102, 0);">String</span>(mode) );<br>&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// check a valid sensor was supplied</span><br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( mode &gt; 1 &amp;&amp; mode &lt; 7 ) { <span style="color: rgb(126, 126, 126);">// i.e. sensor is used</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( sensor != <span style="color: rgb(0, 102, 153);">"left"</span> &amp;&amp; sensor != <span style="color: rgb(0, 102, 153);">"right"</span> &amp;&amp; sensor != <span style="color: rgb(0, 102, 153);">"front"</span> ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// invalid sensor supplied</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;error(&nbsp;<span style="color: rgb(0, 102, 153);">"ERROR (move)"</span> , <span style="color: rgb(0, 102, 153);">"invalid sensor"</span> , <span style="color: rgb(0, 102, 153);">"sensor="</span> + <span style="color: rgb(204, 102, 0);">String</span>(sensor) );<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// set motor directions</span><br>&nbsp;&nbsp;&nbsp;&nbsp;set_direction(&nbsp;direct&nbsp;);<br>&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// turn motors on</span><br>&nbsp;&nbsp;&nbsp;&nbsp;mtime&nbsp;=&nbsp;<span style="color: rgb(204, 102, 0);">millis</span>(); <span style="color: rgb(126, 126, 126);">// log time motors were turned on (interupt cuts power if they are on too long)</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// take up slack in drive train</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">analogWrite</span>(right_on, 15); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">analogWrite</span>(left_on, 15); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(100);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">analogWrite</span>(right_on, 50); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">analogWrite</span>(left_on, 50); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(50);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">analogWrite</span>(right_on, 100); <span style="color: rgb(126, 126, 126);">//slow </span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">analogWrite</span>(left_on, 100); <span style="color: rgb(126, 126, 126);">//slow</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( (<span style="color: rgb(204, 102, 0);">analogRead</span>(batvol) / 24.5) &lt; 12 ){ <span style="color: rgb(126, 126, 126);">// if battery low then run motors a bit faster</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">analogWrite</span>(right_on, 110); <span style="color: rgb(126, 126, 126);">//slow </span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">analogWrite</span>(left_on, 110); <span style="color: rgb(126, 126, 126);">//slow</span><br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(100);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// if not turning go to full speed</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( direct == <span style="color: rgb(0, 102, 153);">"forward"</span> || direct == <span style="color: rgb(0, 102, 153);">"reverse"</span> ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( num &gt; 0 ) { <span style="color: rgb(126, 126, 126);">// negative means very slow </span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">analogWrite</span>(right_on, 150); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">analogWrite</span>(left_on, 150); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(100);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(right_on, <span style="color: rgb(0, 102, 153);">HIGH</span>); <span style="color: rgb(126, 126, 126);">//full on </span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(left_on, <span style="color: rgb(0, 102, 153);">HIGH</span>); <span style="color: rgb(126, 126, 126);">//full on </span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;num&nbsp;=&nbsp;<span style="color: rgb(204, 102, 0);">abs</span>(num); <span style="color: rgb(126, 126, 126);">// remove negative</span><br>&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// -----------------------</span><br>&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// mode1 - move set time</span><br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( mode == 1 ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">//time setting supplied so run motors for set time</span><br>&nbsp;&nbsp;&nbsp;&nbsp;lcdshow&nbsp;(&nbsp;<span style="color: rgb(0, 102, 153);">"Move for"</span> , <span style="color: rgb(204, 102, 0);">String</span>(<span style="color: rgb(204, 102, 0);">int</span>(num / 1000)) + <span style="color: rgb(0, 102, 153);">" seconds"</span> ); &nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(uleds[0],<span style="color: rgb(0, 102, 153);">HIGH</span>); <span style="color: rgb(126, 126, 126);">// under body light</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(num); <span style="color: rgb(126, 126, 126);">// wait</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(uleds[0],<span style="color: rgb(0, 102, 153);">LOW</span>); <span style="color: rgb(126, 126, 126);">// under body light</span><br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// -----------------------</span><br>&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// mode2/mode3 - find set distance</span><br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">else</span> <span style="color: rgb(204, 102, 0);">if</span> ( mode == 2 || mode == 3 ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// distance setting supplied so run until this distance from object using ultrasound</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(uleds[1],<span style="color: rgb(0, 102, 153);">HIGH</span>); <span style="color: rgb(126, 126, 126);">// under body light</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// seperate lines as the LCD locks for some reason if I try to just use the variable direct ??</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( direct == <span style="color: rgb(0, 102, 153);">"forward"</span> ) lcdshow ( <span style="color: rgb(0, 102, 153);">"FORWARD to "</span> + <span style="color: rgb(204, 102, 0);">String</span>(num) + <span style="color: rgb(0, 102, 153);">"cm "</span> , <span style="color: rgb(0, 102, 153);">" "</span> ); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">else</span> <span style="color: rgb(204, 102, 0);">if</span> ( direct == <span style="color: rgb(0, 102, 153);">"reverse"</span> ) lcdshow ( <span style="color: rgb(0, 102, 153);">"REVERSE to "</span> + <span style="color: rgb(204, 102, 0);">String</span>(num) + <span style="color: rgb(0, 102, 153);">"cm "</span> , <span style="color: rgb(0, 102, 153);">" "</span> ); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">else</span> <span style="color: rgb(204, 102, 0);">if</span> ( direct == <span style="color: rgb(0, 102, 153);">"left"</span> ) lcdshow ( <span style="color: rgb(0, 102, 153);">"LEFT to "</span> + <span style="color: rgb(204, 102, 0);">String</span>(num) + <span style="color: rgb(0, 102, 153);">"cm "</span> , <span style="color: rgb(0, 102, 153);">" "</span> ); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">else</span> <span style="color: rgb(204, 102, 0);">if</span> ( direct == <span style="color: rgb(0, 102, 153);">"right"</span> ) lcdshow ( <span style="color: rgb(0, 102, 153);">"RIGHT to"</span> + <span style="color: rgb(204, 102, 0);">String</span>(num) + <span style="color: rgb(0, 102, 153);">"cm "</span> , <span style="color: rgb(0, 102, 153);">" "</span> ); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> tcount=0; <span style="color: rgb(126, 126, 126);">// temp counter (timeout if motors running too long)</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> us = read_ultrasonics( sensor , 90 ); <span style="color: rgb(126, 126, 126);">// get readings from ultrasonic sensor</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> temp = 0 ; <span style="color: rgb(126, 126, 126);">// temp flag</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> slow = 50; <span style="color: rgb(126, 126, 126);">// slow speed when close</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">while</span> ( tcount &lt; 200 &amp;&amp; temp == 0 ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span> (300);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tcount&nbsp;=&nbsp;tcount&nbsp;+&nbsp;1;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// increment counter</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> us = read_ultrasonics( sensor , 90 ); <span style="color: rgb(126, 126, 126);">// get readings from ultrasonic sensor</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// check if in correct position</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( mode == 2 &amp;&amp; us != 0 ) { <span style="color: rgb(126, 126, 126);">// if moving towards or away from obsticle</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// moving towards</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( us &lt; (num + 10) ) { <span style="color: rgb(126, 126, 126);">// if close slow down</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">analogWrite</span>(right_on, slow); <span style="color: rgb(126, 126, 126);">//slow </span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">analogWrite</span>(left_on, slow); <span style="color: rgb(126, 126, 126);">//slow</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( us &lt; (num + 1) ) temp = 1; <span style="color: rgb(126, 126, 126);">// correct possition so stop</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">else</span> <span style="color: rgb(204, 102, 0);">if</span> ( mode == 3 &amp;&amp; us != 0 ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// moving away from</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( us &gt; (num - 10) ) { <span style="color: rgb(126, 126, 126);">// if close slow down</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">analogWrite</span>(right_on, slow); <span style="color: rgb(126, 126, 126);">//slow</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">analogWrite</span>(left_on, slow); <span style="color: rgb(126, 126, 126);">//slow</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( us &gt; (num - 1) ) temp = 1; <span style="color: rgb(126, 126, 126);">// correct possition so stop</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(uleds[1],<span style="color: rgb(0, 102, 153);">LOW</span>); <span style="color: rgb(126, 126, 126);">// under body light</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">//check there was no problem</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( tcount &gt;= 200 ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">//robot timed out</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;error(&nbsp;<span style="color: rgb(0, 102, 153);">"ERROR (move 2/3)"</span> , <span style="color: rgb(0, 102, 153);">"timed out"</span> , <span style="color: rgb(0, 102, 153);">" "</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// -----------------------</span><br>&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// mode4/mode5 - move until distance less than or greater than</span><br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">else</span> <span style="color: rgb(204, 102, 0);">if</span> ( mode == 4 || mode == 5 ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// distance setting supplied so run until this distance from object using ultrasound</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(uleds[2],<span style="color: rgb(0, 102, 153);">HIGH</span>); <span style="color: rgb(126, 126, 126);">// under body light</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// seperate lines as the LCD locks for some reason if I try to just use the variable direct ??</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( direct == <span style="color: rgb(0, 102, 153);">"forward"</span> ) lcdshow ( <span style="color: rgb(0, 102, 153);">"FORWARD til "</span> + <span style="color: rgb(204, 102, 0);">String</span>(num) + <span style="color: rgb(0, 102, 153);">"cm "</span> , <span style="color: rgb(0, 102, 153);">" "</span> ); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">else</span> <span style="color: rgb(204, 102, 0);">if</span> ( direct == <span style="color: rgb(0, 102, 153);">"reverse"</span> ) lcdshow ( <span style="color: rgb(0, 102, 153);">"REVERSE til "</span> + <span style="color: rgb(204, 102, 0);">String</span>(num) + <span style="color: rgb(0, 102, 153);">"cm "</span> , <span style="color: rgb(0, 102, 153);">" "</span> ); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">else</span> <span style="color: rgb(204, 102, 0);">if</span> ( direct == <span style="color: rgb(0, 102, 153);">"left"</span> ) lcdshow ( <span style="color: rgb(0, 102, 153);">"LEFT til "</span> + <span style="color: rgb(204, 102, 0);">String</span>(num) + <span style="color: rgb(0, 102, 153);">"cm "</span> , <span style="color: rgb(0, 102, 153);">" "</span> ); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">else</span> <span style="color: rgb(204, 102, 0);">if</span> ( direct == <span style="color: rgb(0, 102, 153);">"right"</span> ) lcdshow ( <span style="color: rgb(0, 102, 153);">"RIGHT til "</span> + <span style="color: rgb(204, 102, 0);">String</span>(num) + <span style="color: rgb(0, 102, 153);">"cm "</span> , <span style="color: rgb(0, 102, 153);">" "</span> ); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> tcount=0; <span style="color: rgb(126, 126, 126);">// temp counter (timeout if motors running too long)</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> us = read_ultrasonics( sensor , 90 ); <span style="color: rgb(126, 126, 126);">// get readings from ultrasonic sensor</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> temp = 0 ; <span style="color: rgb(126, 126, 126);">// temp flag</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">while</span> ( tcount &lt; 200 &amp;&amp; temp == 0 ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span> (300);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tcount&nbsp;=&nbsp;tcount&nbsp;+&nbsp;1;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// increment counter</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> us = read_ultrasonics( sensor , 90 ); <span style="color: rgb(126, 126, 126);">// get readings from ultrasonic sensor</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// check if in correct position</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( mode == 4 &amp;&amp; us != 0 ) { <span style="color: rgb(126, 126, 126);">// until distance greater than</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( us &gt; num ) temp = 1; <span style="color: rgb(126, 126, 126);">// correct possition so stop</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( mode == 5 &amp;&amp; us != 0 ) { <span style="color: rgb(126, 126, 126);">// until distance less than</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( us &lt; num ) temp = 1; <span style="color: rgb(126, 126, 126);">// correct possition so stop</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(uleds[2],<span style="color: rgb(0, 102, 153);">LOW</span>); <span style="color: rgb(126, 126, 126);">// under body light</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">//check there was no problem</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( tcount &gt;= 200 ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">//robot timed out</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;error(&nbsp;<span style="color: rgb(0, 102, 153);">"ERROR (move 3-4)"</span> , <span style="color: rgb(0, 102, 153);">"timed out"</span> , <span style="color: rgb(0, 102, 153);">" "</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// -----------------------</span><br>&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// mode6 - follow wall </span><br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">else</span> <span style="color: rgb(204, 102, 0);">if</span> ( mode == 6 ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// follow a wall ( i.e. run parallel to it )</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// this is done by varying the speed of one motor if the distance to wall is increasing</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(uleds[3],<span style="color: rgb(0, 102, 153);">HIGH</span>); <span style="color: rgb(126, 126, 126);">// under body light</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> mod = 90; <span style="color: rgb(126, 126, 126);">// amount to vary speed by</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> tdelay = 500; <span style="color: rgb(126, 126, 126);">// time between checking course</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> tadj = 500; <span style="color: rgb(126, 126, 126);">// time to adjust course</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> utemp = read_ultrasonics( sensor , 90 ); <span style="color: rgb(126, 126, 126);">// get initial reading from sensor</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> tcnt = 0; <span style="color: rgb(126, 126, 126);">// time counter</span><br>&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">while</span> (tcnt &lt; num) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tcnt&nbsp;=&nbsp;tcnt&nbsp;+&nbsp;tdelay;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// increment counter</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// adjust steering if distance from wall is changing</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> us = read_ultrasonics( sensor , 90 ); <span style="color: rgb(126, 126, 126);">// get readings from ultrasonic sensor</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcdshow&nbsp;(&nbsp;<span style="color: rgb(0, 102, 153);">"follow wall"</span> , <span style="color: rgb(0, 102, 153);">" "</span> ) ;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// set new motor speeds (depending on which side sensor is being used and distance from wall)</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( sensor == <span style="color: rgb(0, 102, 153);">"left"</span> ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( us == utemp ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcdshow(&nbsp;<span style="color: rgb(0, 102, 153);">""</span> , <span style="color: rgb(0, 102, 153);">"course ok"</span> ) ;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">analogWrite</span>(right_on, 150); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">analogWrite</span>(left_on, 150);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">else</span> <span style="color: rgb(204, 102, 0);">if</span> ( us &gt; utemp ) { <span style="color: rgb(126, 126, 126);">// distance increased</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcdshow(&nbsp;<span style="color: rgb(0, 102, 153);">""</span> , <span style="color: rgb(0, 102, 153);">"turning left"</span> ) ;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">analogWrite</span>(right_on, 150 + mod); <span style="color: rgb(126, 126, 126);">// turn left</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">analogWrite</span>(left_on, 150 - mod );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(tadj);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">analogWrite</span>(right_on, 150); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">analogWrite</span>(left_on, 150);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tcnt&nbsp;=&nbsp;tcnt&nbsp;+&nbsp;tadj;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// increment counter</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;utemp&nbsp;=&nbsp;read_ultrasonics(&nbsp;sensor&nbsp;,&nbsp;90&nbsp;);&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// get readings from ultrasonic sensor</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">else</span> <span style="color: rgb(204, 102, 0);">if</span> ( us &lt; utemp ) { <span style="color: rgb(126, 126, 126);">// distance decreased</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcdshow(&nbsp;<span style="color: rgb(0, 102, 153);">""</span> , <span style="color: rgb(0, 102, 153);">"turning right"</span> ) ;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">analogWrite</span>(right_on, 150 - mod ); <span style="color: rgb(126, 126, 126);">// turn right</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">analogWrite</span>(left_on, 150 + mod );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(tadj);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">analogWrite</span>(right_on, 150); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">analogWrite</span>(left_on, 150);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tcnt&nbsp;=&nbsp;tcnt&nbsp;+&nbsp;tadj;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// increment counter</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;utemp&nbsp;=&nbsp;read_ultrasonics(&nbsp;sensor&nbsp;,&nbsp;90&nbsp;);&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// get readings from ultrasonic sensor</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( sensor == <span style="color: rgb(0, 102, 153);">"right"</span> ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( us == utemp ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcdshow(&nbsp;<span style="color: rgb(0, 102, 153);">""</span> , <span style="color: rgb(0, 102, 153);">"course ok"</span> ) ;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">analogWrite</span>(right_on, 150); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">analogWrite</span>(left_on, 150);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">else</span> <span style="color: rgb(204, 102, 0);">if</span> ( us &gt; utemp ) { <span style="color: rgb(126, 126, 126);">// distance increased</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcdshow(&nbsp;<span style="color: rgb(0, 102, 153);">""</span> , <span style="color: rgb(0, 102, 153);">"turning right"</span> ) ;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">analogWrite</span>(right_on, 150 - mod); <span style="color: rgb(126, 126, 126);">// turn right</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">analogWrite</span>(left_on, 150 + mod );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(tadj);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">analogWrite</span>(right_on, 150); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">analogWrite</span>(left_on, 150);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tcnt&nbsp;=&nbsp;tcnt&nbsp;+&nbsp;tadj;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// increment counter</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;utemp&nbsp;=&nbsp;read_ultrasonics(&nbsp;sensor&nbsp;,&nbsp;90&nbsp;);&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// get readings from ultrasonic sensor</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">else</span> <span style="color: rgb(204, 102, 0);">if</span> ( us &lt; utemp ) { <span style="color: rgb(126, 126, 126);">// distance decreased</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcdshow(&nbsp;<span style="color: rgb(0, 102, 153);">""</span> , <span style="color: rgb(0, 102, 153);">"turning left"</span> ) ;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">analogWrite</span>(right_on, 150 + mod ); <span style="color: rgb(126, 126, 126);">// turn left</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">analogWrite</span>(left_on, 150 - mod );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(tadj);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">analogWrite</span>(right_on, 150); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">analogWrite</span>(left_on, 150);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tcnt&nbsp;=&nbsp;tcnt&nbsp;+&nbsp;tadj;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// increment counter</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;utemp&nbsp;=&nbsp;read_ultrasonics(&nbsp;sensor&nbsp;,&nbsp;90&nbsp;);&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// get readings from ultrasonic sensor</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(tdelay);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(uleds[3],<span style="color: rgb(0, 102, 153);">LOW</span>); <span style="color: rgb(126, 126, 126);">// under body light</span><br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// -----------------------</span><br>&nbsp;&nbsp;<br>&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// mode7 - guided by PS2 mouse</span><br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">else</span> <span style="color: rgb(204, 102, 0);">if</span> ( mode == 7 ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// guided by PS2 mouse</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(uleds[4],<span style="color: rgb(0, 102, 153);">HIGH</span>); <span style="color: rgb(126, 126, 126);">// under body light</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// disable interrupt as it upsets the PS2 mouse - (called manually during this proc)</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Timer1.<span style="color: rgb(204, 102, 0);">detachInterrupt</span>(); <span style="color: rgb(126, 126, 126);">//disable the timer1 interrupt</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// seperate lines as the LCD locks for some reason if I try to just use the variable direct ??</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( direct == <span style="color: rgb(0, 102, 153);">"forward"</span> ) lcdshow ( <span style="color: rgb(0, 102, 153);">"FORWARD by ps2"</span> , <span style="color: rgb(0, 102, 153);">"to "</span> + <span style="color: rgb(204, 102, 0);">String</span>(num) ); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">else</span> <span style="color: rgb(204, 102, 0);">if</span> ( direct == <span style="color: rgb(0, 102, 153);">"reverse"</span> ) lcdshow ( <span style="color: rgb(0, 102, 153);">"REVRSE by ps2"</span> , <span style="color: rgb(0, 102, 153);">"to "</span> + <span style="color: rgb(204, 102, 0);">String</span>(num) ); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">else</span> <span style="color: rgb(204, 102, 0);">if</span> ( direct == <span style="color: rgb(0, 102, 153);">"right"</span> ) lcdshow ( <span style="color: rgb(0, 102, 153);">"RIGHT by ps2"</span> , <span style="color: rgb(0, 102, 153);">"to "</span> + <span style="color: rgb(204, 102, 0);">String</span>(num) ); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">else</span> <span style="color: rgb(204, 102, 0);">if</span> ( direct == <span style="color: rgb(0, 102, 153);">"left"</span> ) lcdshow ( <span style="color: rgb(0, 102, 153);">"LEFT by ps2"</span> , <span style="color: rgb(0, 102, 153);">"to "</span> + <span style="color: rgb(204, 102, 0);">String</span>(num) ); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> tcount=0; <span style="color: rgb(126, 126, 126);">// temp counter (timeout if motors running too long)</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> mxpos = 0; <span style="color: rgb(126, 126, 126);">// current mouse data</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> mypos = 0; <span style="color: rgb(126, 126, 126);">// current mouse data</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">char</span> mstat;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">char</span> mx;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">char</span> my;<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;qtemp&nbsp;=&nbsp;0;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// reset temp flag</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;num&nbsp;=&nbsp;num&nbsp;-&nbsp;300;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// to compensate for motor over run</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MouseInfo&nbsp;mouseInfo;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// call the mouse data structure</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// convert direct to a integer to make comparing faster below?</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> ndirect = 0;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( direct == <span style="color: rgb(0, 102, 153);">"forward"</span> ) ndirect = 1;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( direct == <span style="color: rgb(0, 102, 153);">"reverse"</span> ) ndirect = 2;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( direct == <span style="color: rgb(0, 102, 153);">"right"</span> ) ndirect = 3;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( direct == <span style="color: rgb(0, 102, 153);">"left"</span> ) ndirect = 4;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( ndirect == 0 ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// error</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;error(&nbsp;<span style="color: rgb(0, 102, 153);">"ERROR (mode7)"</span> , <span style="color: rgb(0, 102, 153);">"invalid direct"</span> , <span style="color: rgb(204, 102, 0);">String</span>(direct) );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">while</span>(1==1); <span style="color: rgb(126, 126, 126);">// stop</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">while</span> ( qtemp == 0 ) { <span style="color: rgb(126, 126, 126);">// keep checking mouse reading</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mouse.getData(&amp;mouseInfo);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// get a reading from the mouse</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mxpos&nbsp;=&nbsp;mxpos&nbsp;+&nbsp;mouseInfo.x;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// update current mouse data</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mypos&nbsp;=&nbsp;mypos&nbsp;+&nbsp;mouseInfo.y;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// update current mouse data</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// check if target reached yet</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( ndirect == 1 ) { <span style="color: rgb(126, 126, 126);">// forward</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// moving forward so y will be increasing</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( mypos &gt; num ) qtemp = 1; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">else</span> <span style="color: rgb(204, 102, 0);">if</span> ( ndirect == 2 ) { <span style="color: rgb(126, 126, 126);">// reverse</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// moving backwards so y will be decreasing</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( <span style="color: rgb(204, 102, 0);">abs</span>(mypos) &gt; num ) qtemp = 1; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">else</span> <span style="color: rgb(204, 102, 0);">if</span> ( ndirect == 3 ) { <span style="color: rgb(126, 126, 126);">// right</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// moving right so x will be decreasing</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( <span style="color: rgb(204, 102, 0);">abs</span>(mxpos) &gt; num ) qtemp = 1; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">else</span> <span style="color: rgb(204, 102, 0);">if</span> ( ndirect == 4 ) { <span style="color: rgb(126, 126, 126);">// left</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// moving left so x will be increasing</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( mxpos &gt; num ) qtemp = 1; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">//call interrupt routine manually</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RoboInter();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">//while</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(uleds[4],<span style="color: rgb(0, 102, 153);">LOW</span>); <span style="color: rgb(126, 126, 126);">// under body light off </span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// turn interrupt back on</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Timer1.<span style="color: rgb(204, 102, 0);">attachInterrupt</span>( RoboInter ); &nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">//if </span><br>&nbsp;&nbsp;<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// -----------------------</span><br>&nbsp;&nbsp;stop_robot();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// stop</span><br>&nbsp;&nbsp;lcdshow&nbsp;(&nbsp;<span style="color: rgb(0, 102, 153);">" "</span> , <span style="color: rgb(0, 102, 153);">" "</span> ); <span style="color: rgb(126, 126, 126);">// clear lcd</span><br>}&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">//proc</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;---------------------------------------------------------</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;stop&nbsp;moving&nbsp;&nbsp;&nbsp;&nbsp;(stop0)</span><br><span style="color: rgb(204, 102, 0);">void</span> stop_robot() {<br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(right_on, <span style="color: rgb(0, 102, 153);">LOW</span>); <span style="color: rgb(126, 126, 126);">//turn motor off</span><br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(left_on, <span style="color: rgb(0, 102, 153);">LOW</span>); <span style="color: rgb(126, 126, 126);">//turn motor off</span><br>&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">//display on lcd</span><br>&nbsp;&nbsp;&nbsp;&nbsp;lcdshow(&nbsp;<span style="color: rgb(0, 102, 153);">"stop moving"</span> , <span style="color: rgb(0, 102, 153);">" "</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;mtime&nbsp;=&nbsp;0;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// log motors off (interrupt cuts power if they are on too long)</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// all under body lights off</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">for</span> ( <span style="color: rgb(204, 102, 0);">int</span> i = 0 ; i &lt; 6 ; i++) <span style="color: rgb(204, 102, 0);">digitalWrite</span>(uleds[i],<span style="color: rgb(0, 102, 153);">LOW</span>); &nbsp;&nbsp;&nbsp;&nbsp;underlights&nbsp;(&nbsp;2&nbsp;,&nbsp;8&nbsp;);&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// flash under body lights </span><br>}&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">//proc</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;---------------------------------------------------------</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;Timed&nbsp;Interrupt&nbsp;(inter1)&nbsp;</span><br><span style="color: rgb(204, 102, 0);">void</span> RoboInter() {<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( <span style="color: rgb(204, 102, 0);">digitalRead</span>(radioa) == <span style="color: rgb(0, 102, 153);">LOW</span> ) radiobutton = 1; &nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">else</span> <span style="color: rgb(204, 102, 0);">if</span> ( <span style="color: rgb(204, 102, 0);">digitalRead</span>(radiob) == <span style="color: rgb(0, 102, 153);">LOW</span> ) radiobutton = 2; &nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">else</span> <span style="color: rgb(204, 102, 0);">if</span> ( <span style="color: rgb(204, 102, 0);">digitalRead</span>(radioc) == <span style="color: rgb(0, 102, 153);">LOW</span> ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// EPO button pressed</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;radiobutton&nbsp;=&nbsp;3;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stop_robot();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(sounder,<span style="color: rgb(0, 102, 153);">LOW</span>); <span style="color: rgb(126, 126, 126);">// sounder off</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(ledr, <span style="color: rgb(0, 102, 153);">HIGH</span>); <span style="color: rgb(126, 126, 126);">// warning led on</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcdshow(&nbsp;<span style="color: rgb(0, 102, 153);">"STOPPED !"</span> , <span style="color: rgb(0, 102, 153);">"EPO button"</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">while</span> (1); <span style="color: rgb(126, 126, 126);">// stop</span><br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">else</span> <span style="color: rgb(204, 102, 0);">if</span> ( <span style="color: rgb(204, 102, 0);">digitalRead</span>(radiod) == <span style="color: rgb(0, 102, 153);">LOW</span> ) radiobutton = 4; &nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// stop robot if bumper activated (i.e. it has hit something)</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( <span style="color: rgb(204, 102, 0);">digitalRead</span>(bumper) == <span style="color: rgb(0, 102, 153);">LOW</span> ) { &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// bumper activated</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stop_robot();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(sounder,<span style="color: rgb(0, 102, 153);">LOW</span>); <span style="color: rgb(126, 126, 126);">// sounder off</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(ledr, <span style="color: rgb(0, 102, 153);">HIGH</span>); <span style="color: rgb(126, 126, 126);">// warning led on</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcdshow(&nbsp;<span style="color: rgb(0, 102, 153);">"STOPPED !"</span> , <span style="color: rgb(0, 102, 153);">"bumper hit !"</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">while</span> (1==1); <span style="color: rgb(126, 126, 126);">// stop</span><br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// stop robot if motors have been running too long</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( mtime != 0 &amp;&amp; <span style="color: rgb(204, 102, 0);">millis</span>() &gt; ( mtime + 25000 ) ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stop_robot();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(sounder,<span style="color: rgb(0, 102, 153);">LOW</span>); <span style="color: rgb(126, 126, 126);">// sounder off</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(ledr, <span style="color: rgb(0, 102, 153);">HIGH</span>); <span style="color: rgb(126, 126, 126);">// warning led on</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcdshow(&nbsp;<span style="color: rgb(0, 102, 153);">"STOPPED !"</span> , <span style="color: rgb(0, 102, 153);">"motor timeout"</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">while</span> (1==1); <span style="color: rgb(126, 126, 126);">// stop</span><br>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>}<br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;---------------------------------------------------------</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;read&nbsp;ultrasonic&nbsp;range&nbsp;finders</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;input&nbsp;=&nbsp;front,&nbsp;left&nbsp;or&nbsp;right&nbsp;sensor&nbsp;,&nbsp;angle&nbsp;in&nbsp;degrees&nbsp;(0-180)&nbsp;of&nbsp;front&nbsp;sensor</span><br><span style="color: rgb(204, 102, 0);">int</span> read_ultrasonics( <span style="color: rgb(204, 102, 0);">String</span> sel , <span style="color: rgb(204, 102, 0);">int</span> angle ) {<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(uleds[5],<span style="color: rgb(0, 102, 153);">HIGH</span>); <span style="color: rgb(126, 126, 126);">// under body light</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// verify valid sensor requested</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( sel != <span style="color: rgb(0, 102, 153);">"front"</span> &amp;&amp; sel != <span style="color: rgb(0, 102, 153);">"left"</span> &amp;&amp; sel != <span style="color: rgb(0, 102, 153);">"right"</span> ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// invalid sensor</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;error(&nbsp;<span style="color: rgb(0, 102, 153);">"ERROR (UltraSnd)"</span> , <span style="color: rgb(0, 102, 153);">"invalid sensor"</span> , <span style="color: rgb(204, 102, 0);">String</span>(sel) );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">while</span>(1==1); <span style="color: rgb(126, 126, 126);">// stop</span><br>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// verify valid sensor angle</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( sel == <span style="color: rgb(0, 102, 153);">"front"</span> ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( angle &lt; 0 || angle &gt; 180 ) { &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// invalid angle</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;error(&nbsp;<span style="color: rgb(0, 102, 153);">"ERROR (UltraSnd)"</span> , <span style="color: rgb(0, 102, 153);">"invalid angle"</span> , <span style="color: rgb(204, 102, 0);">String</span>(angle) );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">while</span>(1==1); <span style="color: rgb(126, 126, 126);">// stop</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// get readings from the ultrasound range finders</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> qtemp = 0;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( sel == <span style="color: rgb(0, 102, 153);">"front"</span> ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// front sensor so need to adjust sensor angle first</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myservo.<span style="color: rgb(204, 102, 0);">write</span>(angle);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(400); <span style="color: rgb(126, 126, 126);">// wait for sero to move</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;qtemp&nbsp;=&nbsp;ultrasonic_front.convert(ultrasonic_front.timing(),&nbsp;Ultrasonic::CM);&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">else</span> <span style="color: rgb(204, 102, 0);">if</span> ( sel == <span style="color: rgb(0, 102, 153);">"left"</span> ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;qtemp&nbsp;=&nbsp;ultrasonic_left.convert(ultrasonic_left.timing(),&nbsp;Ultrasonic::CM);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">else</span> <span style="color: rgb(204, 102, 0);">if</span> ( sel == <span style="color: rgb(0, 102, 153);">"right"</span> ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;qtemp&nbsp;=&nbsp;ultrasonic_right.convert(ultrasonic_right.timing(),&nbsp;Ultrasonic::CM);&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// display results on LCD</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcdshow&nbsp;(&nbsp;<span style="color: rgb(0, 102, 153);">""</span> , sel + <span style="color: rgb(0, 102, 153);">" = "</span> + <span style="color: rgb(204, 102, 0);">String</span>(qtemp) );<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// if front sensor has been turned, put it back to the front</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( sel == <span style="color: rgb(0, 102, 153);">"front"</span> &amp;&amp; angle != 90 ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">//myservo.write(90);</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( qtemp &gt; 300 ) qtemp=0; <span style="color: rgb(126, 126, 126);">// if over 3m then must be a false reading</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(uleds[5],<span style="color: rgb(0, 102, 153);">LOW</span>); <span style="color: rgb(126, 126, 126);">// under body light</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">return</span> qtemp;<br>}<br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;---------------------------------------------------------</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;display&nbsp;on&nbsp;LCD&nbsp;</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;inputs&nbsp;=&nbsp;line1&nbsp;,&nbsp;line2</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;if&nbsp;a&nbsp;line&nbsp;is&nbsp;""&nbsp;then&nbsp;leave&nbsp;existing&nbsp;content</span><br><span style="color: rgb(204, 102, 0);">void</span> lcdshow ( <span style="color: rgb(204, 102, 0);">String</span> line1 , <span style="color: rgb(204, 102, 0);">String</span> line2 ) {<br>&nbsp;<br>&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( line1 != <span style="color: rgb(0, 102, 153);">""</span> ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcd.<span style="color: rgb(204, 102, 0);">setCursor</span>(0, 0);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcd.<span style="color: rgb(204, 102, 0);">print</span>(line1);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcd.<span style="color: rgb(204, 102, 0);">print</span>(<span style="color: rgb(0, 102, 153);">" "</span>);<br>&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( line2 != <span style="color: rgb(0, 102, 153);">""</span> ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcd.<span style="color: rgb(204, 102, 0);">setCursor</span>(0, 1);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcd.<span style="color: rgb(204, 102, 0);">print</span>(line2);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcd.<span style="color: rgb(204, 102, 0);">print</span>(<span style="color: rgb(0, 102, 153);">" "</span>);<br>&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;<br>}<br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;---------------------------------------------------------</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;sound&nbsp;a&nbsp;warning</span><br><span style="color: rgb(204, 102, 0);">void</span> warning_sound( <span style="color: rgb(204, 102, 0);">int</span> cnt ) {<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">for</span> ( <span style="color: rgb(204, 102, 0);">int</span> i = 0 ; i &lt; cnt ; i++) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(sounder,<span style="color: rgb(0, 102, 153);">HIGH</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(ledb, <span style="color: rgb(0, 102, 153);">HIGH</span>); <span style="color: rgb(126, 126, 126);">// warning led on</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(300);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(sounder,<span style="color: rgb(0, 102, 153);">LOW</span>);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(ledb, <span style="color: rgb(0, 102, 153);">LOW</span>); <span style="color: rgb(126, 126, 126);">// warning led off</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(300);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;---------------------------------------------------------</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;set&nbsp;motor&nbsp;directions</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;input&nbsp;=&nbsp;forward&nbsp;,&nbsp;reverse&nbsp;,&nbsp;left&nbsp;or&nbsp;right</span><br><span style="color: rgb(204, 102, 0);">void</span> set_direction( <span style="color: rgb(204, 102, 0);">String</span> dir ) {<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> flag = 0; <span style="color: rgb(126, 126, 126);">// temp flag</span><br>&nbsp;&nbsp;<br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( dir == <span style="color: rgb(0, 102, 153);">"forward"</span> ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;flag&nbsp;=&nbsp;1;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(right_dir, forward); <span style="color: rgb(126, 126, 126);">//set right wheel for forward</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(switch_delay); <span style="color: rgb(126, 126, 126);">//delay between switching to reduce spikes in power line</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(left_dir, forward); <span style="color: rgb(126, 126, 126);">//set left wheel for forward</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(switch_delay); <span style="color: rgb(126, 126, 126);">//delay between switching to reduce spikes in power line</span><br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( dir == <span style="color: rgb(0, 102, 153);">"reverse"</span> ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;flag&nbsp;=&nbsp;1;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(right_dir, reverse); <span style="color: rgb(126, 126, 126);">//set right wheel for forward</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(switch_delay); <span style="color: rgb(126, 126, 126);">//delay between switching to reduce spikes in power line</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(left_dir, reverse); <span style="color: rgb(126, 126, 126);">//set left wheel for forward</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(switch_delay); <span style="color: rgb(126, 126, 126);">//delay between switching to reduce spikes in power line</span><br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( dir == <span style="color: rgb(0, 102, 153);">"right"</span> ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;flag&nbsp;=&nbsp;1;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(right_dir, reverse); <span style="color: rgb(126, 126, 126);">//set right wheel for forward</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(switch_delay); <span style="color: rgb(126, 126, 126);">//delay between switching to reduce spikes in power line</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(left_dir, forward); <span style="color: rgb(126, 126, 126);">//set left wheel for forward</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(switch_delay); <span style="color: rgb(126, 126, 126);">//delay between switching to reduce spikes in power line</span><br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( dir == <span style="color: rgb(0, 102, 153);">"left"</span> ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;flag&nbsp;=&nbsp;1;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(right_dir, forward); <span style="color: rgb(126, 126, 126);">//set right wheel for forward</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(switch_delay); <span style="color: rgb(126, 126, 126);">//delay betwen switching to reduce spikes in power line</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(left_dir, reverse); <span style="color: rgb(126, 126, 126);">//set left wheel for forward</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(switch_delay); <span style="color: rgb(126, 126, 126);">//delay betwen switching to reduce spikes in power line</span><br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// check a valid direction was supplied</span><br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( flag == 0 ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;error(&nbsp;<span style="color: rgb(0, 102, 153);">"ERROR (set dir)"</span> , <span style="color: rgb(0, 102, 153);">"invalid directn"</span> , <span style="color: rgb(0, 102, 153);">"dir="</span> + <span style="color: rgb(204, 102, 0);">String</span>(dir) );<br>&nbsp;&nbsp;}<br>}<br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;---------------------------------------------------------</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;correct&nbsp;any&nbsp;error&nbsp;in&nbsp;going&nbsp;stright&nbsp;by&nbsp;comparing&nbsp;a&nbsp;measurement&nbsp;with&nbsp;expected&nbsp;(correcte)</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;input&nbsp;=&nbsp;expected&nbsp;distance&nbsp;,&nbsp;sensor&nbsp;,&nbsp;amount&nbsp;to&nbsp;adjust&nbsp;by&nbsp;per&nbsp;cm&nbsp;out</span><br><span style="color: rgb(204, 102, 0);">void</span> correct_e ( <span style="color: rgb(204, 102, 0);">int</span> dist , <span style="color: rgb(204, 102, 0);">String</span> sensor , <span style="color: rgb(204, 102, 0);">int</span> adj ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> us = read_ultrasonics( sensor , 90 ); <span style="color: rgb(126, 126, 126);">// get readings from ultrasonic sensor</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcdshow(&nbsp;<span style="color: rgb(0, 102, 153);">"Adjusting"</span> , <span style="color: rgb(0, 102, 153);">"1="</span> + <span style="color: rgb(204, 102, 0);">String</span>(dist) + <span style="color: rgb(0, 102, 153);">" - 2="</span> + <span style="color: rgb(204, 102, 0);">String</span>(us) );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span> (1000);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// check adj is not too far out to be corrected</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( us &gt; (dist+20) || us &lt; (dist-20) ) error( <span style="color: rgb(0, 102, 153);">"ERROR (correct)"</span> , <span style="color: rgb(0, 102, 153);">"Adjust too big"</span> , <span style="color: rgb(0, 102, 153);">"1="</span> + <span style="color: rgb(204, 102, 0);">String</span>(dist) + <span style="color: rgb(0, 102, 153);">" - 2="</span> + <span style="color: rgb(204, 102, 0);">String</span>(us) );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// if dist is greater</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( us &gt; dist ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// turn slightly</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcdshow(&nbsp;<span style="color: rgb(0, 102, 153);">""</span> , <span style="color: rgb(0, 102, 153);">"dist. greater"</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(1000);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( sensor == <span style="color: rgb(0, 102, 153);">"right"</span> ) move_robot( 1 , <span style="color: rgb(0, 102, 153);">"right"</span> , adj*(us - dist) , <span style="color: rgb(0, 102, 153);">""</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( sensor == <span style="color: rgb(0, 102, 153);">"left"</span> ) move_robot( 1 , <span style="color: rgb(0, 102, 153);">"left"</span> , adj*(us - dist) , <span style="color: rgb(0, 102, 153);">""</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// if dist is less</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( us &lt; dist ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// turn slightly</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcdshow(&nbsp;<span style="color: rgb(0, 102, 153);">""</span> , <span style="color: rgb(0, 102, 153);">"dist. less"</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(1000);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( sensor == <span style="color: rgb(0, 102, 153);">"right"</span> ) move_robot( 1 , <span style="color: rgb(0, 102, 153);">"left"</span> , adj*(dist - us) , <span style="color: rgb(0, 102, 153);">""</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( sensor == <span style="color: rgb(0, 102, 153);">"left"</span> ) move_robot( 1 , <span style="color: rgb(0, 102, 153);">"right"</span> , adj*(dist - us) , <span style="color: rgb(0, 102, 153);">""</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>}<br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;---------------------------------------------------------</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;correct&nbsp;any&nbsp;error&nbsp;in&nbsp;going&nbsp;stright&nbsp;by&nbsp;using&nbsp;two&nbsp;ultrasound&nbsp;sensors&nbsp;(correctu)</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;input&nbsp;=&nbsp;sensor&nbsp;(i.e.&nbsp;front&nbsp;left&nbsp;right)&nbsp;,&nbsp;correction&nbsp;(distance&nbsp;difference&nbsp;between&nbsp;sensors)</span><br><span style="color: rgb(204, 102, 0);">void</span> correct_u ( <span style="color: rgb(204, 102, 0);">String</span> sensor , <span style="color: rgb(204, 102, 0);">int</span> corectn ) {<br>&nbsp;<br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;------------------------------&nbsp;&nbsp;</span><br>&nbsp;&nbsp;<br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( sensor == <span style="color: rgb(0, 102, 153);">"front"</span> ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// measure front by varying angle of front sensor</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> lcamnt = 40; <span style="color: rgb(126, 126, 126);">// amount to adjust turning left</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> rcamnt = 40; <span style="color: rgb(126, 126, 126);">// amount to adjust turning right</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// adjust angle for distance</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> fang = 25; <span style="color: rgb(126, 126, 126);">// angle from 90 degrees to use for front readings </span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> tempus = read_ultrasonics( <span style="color: rgb(0, 102, 153);">"front"</span> , 90 ); <span style="color: rgb(126, 126, 126);">// get readings from ultrasonic sensor</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( tempus &lt; 25 ) fang = 30; <span style="color: rgb(126, 126, 126);">// close work</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( tempus &gt; 60 ) fang = 15; <span style="color: rgb(126, 126, 126);">// distant work</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">String</span> result = <span style="color: rgb(0, 102, 153);">""</span>; <span style="color: rgb(126, 126, 126);">// result of check</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> tcnt = 0; <span style="color: rgb(126, 126, 126);">// temp counter</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">while</span> ( result != <span style="color: rgb(0, 102, 153);">"straight"</span> &amp;&amp; tcnt &lt; 5 ) { <span style="color: rgb(126, 126, 126);">// adjust several times if required</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tcnt&nbsp;=&nbsp;tcnt&nbsp;+1;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// increment timout counter</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( tcnt &gt; 1 ) <span style="color: rgb(204, 102, 0);">delay</span> (200); <span style="color: rgb(126, 126, 126);">// wait for robot to stop turning</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// read the two measurements</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> usfr = read_ultrasonics( <span style="color: rgb(0, 102, 153);">"front"</span> , 90-fang ); <span style="color: rgb(126, 126, 126);">// get readings from ultrasonic sensor</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(20);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> usfl = read_ultrasonics( <span style="color: rgb(0, 102, 153);">"front"</span> , 90+fang ); <span style="color: rgb(126, 126, 126);">// get readings from ultrasonic sensor</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;usfl&nbsp;=&nbsp;usfl&nbsp;+&nbsp;corectn;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// adjust for correction</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( usfr == 0 ) usfr = 999; <span style="color: rgb(126, 126, 126);">// if zero returned make it very large instead</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( usfl == 0 ) usfl = 999; <span style="color: rgb(126, 126, 126);">// if zero returned make it very large instead</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;=&nbsp;<span style="color: rgb(0, 102, 153);">"straight"</span>; <span style="color: rgb(126, 126, 126);">// result of check</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> amount = 0; <span style="color: rgb(126, 126, 126);">//amount out of square</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( usfr &gt; usfl) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// robot pointing right</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;=&nbsp;<span style="color: rgb(0, 102, 153);">"right"</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;amount&nbsp;=&nbsp;usfr&nbsp;-&nbsp;usfl;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( usfl &gt; usfr) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// robot pointing left</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;=&nbsp;<span style="color: rgb(0, 102, 153);">"left"</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;amount&nbsp;=&nbsp;usfl&nbsp;-&nbsp;usfr;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( amount &gt; 3 ) amount = 3; <span style="color: rgb(126, 126, 126);">// Make sure amount isn't too great</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcdshow(&nbsp;<span style="color: rgb(0, 102, 153);">"correct_u front"</span> , <span style="color: rgb(0, 102, 153);">"l="</span> + <span style="color: rgb(204, 102, 0);">String</span>(usfl) + <span style="color: rgb(0, 102, 153);">" r="</span> + <span style="color: rgb(204, 102, 0);">String</span>(usfr) );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(200);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// make adjustment</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( result == <span style="color: rgb(0, 102, 153);">"right"</span> ) move_robot( 1 , <span style="color: rgb(0, 102, 153);">"left"</span> , ( lcamnt * amount ) , <span style="color: rgb(0, 102, 153);">""</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( result == <span style="color: rgb(0, 102, 153);">"left"</span> ) move_robot( 1 , <span style="color: rgb(0, 102, 153);">"right"</span> , ( rcamnt * amount ) , <span style="color: rgb(0, 102, 153);">""</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// end of while</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// end of proc</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;------------------------------&nbsp;&nbsp;</span><br>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( sensor == <span style="color: rgb(0, 102, 153);">"left"</span> ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// measure side with 2 sensors</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> lcamnt = 40; <span style="color: rgb(126, 126, 126);">// amount to adjust turning left</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> rcamnt = 40; <span style="color: rgb(126, 126, 126);">// amount to adjust turning right</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">String</span> result = <span style="color: rgb(0, 102, 153);">""</span>; <span style="color: rgb(126, 126, 126);">// result of check</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> tcnt = 0; <span style="color: rgb(126, 126, 126);">// temp counter</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">while</span> ( result != <span style="color: rgb(0, 102, 153);">"straight"</span> &amp;&amp; tcnt &lt; 5 ) { <span style="color: rgb(126, 126, 126);">// adjust several times if required</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tcnt&nbsp;=&nbsp;tcnt&nbsp;+1;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// increment timout counter</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( tcnt &gt; 1 ) <span style="color: rgb(204, 102, 0);">delay</span> (200); <span style="color: rgb(126, 126, 126);">// wait for robot to stop turning</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// read the two measurements</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> usff = read_ultrasonics( <span style="color: rgb(0, 102, 153);">"front"</span> , 180 ); <span style="color: rgb(126, 126, 126);">// get readings from ultrasonic sensor</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(20);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> usfr = read_ultrasonics( <span style="color: rgb(0, 102, 153);">"left"</span> , 0 ); <span style="color: rgb(126, 126, 126);">// get readings from ultrasonic sensor</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;usff&nbsp;=&nbsp;usff&nbsp;+&nbsp;corectn;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// adjust for correction</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( usff == 0 ) usff = 999; <span style="color: rgb(126, 126, 126);">// if zero returned make it very large instead</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( usfr == 0 ) usfr = 999; <span style="color: rgb(126, 126, 126);">// if zero returned make it very large instead</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;=&nbsp;<span style="color: rgb(0, 102, 153);">"straight"</span>; <span style="color: rgb(126, 126, 126);">// result of check</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> amount = 0; <span style="color: rgb(126, 126, 126);">//amount out of square</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;usfr&nbsp;=&nbsp;usfr&nbsp;+&nbsp;19;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// adjust for different locations</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( usff &gt; usfr) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// robot pointing right</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;=&nbsp;<span style="color: rgb(0, 102, 153);">"right"</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;amount&nbsp;=&nbsp;usff&nbsp;-&nbsp;usfr;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( usfr &gt; usff) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// robot pointing left</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;=&nbsp;<span style="color: rgb(0, 102, 153);">"left"</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;amount&nbsp;=&nbsp;usfr&nbsp;-&nbsp;usff;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( amount &gt; 3 ) amount = 3; <span style="color: rgb(126, 126, 126);">// Make sure amount isn't too great</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcdshow(&nbsp;<span style="color: rgb(0, 102, 153);">"correct_u left"</span> , <span style="color: rgb(0, 102, 153);">"f="</span> + <span style="color: rgb(204, 102, 0);">String</span>(usff) + <span style="color: rgb(0, 102, 153);">" r="</span> + <span style="color: rgb(204, 102, 0);">String</span>(usfr) );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(200);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// make adjustment</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( result == <span style="color: rgb(0, 102, 153);">"right"</span> ) move_robot( 1 , <span style="color: rgb(0, 102, 153);">"left"</span> , ( lcamnt * amount ) , <span style="color: rgb(0, 102, 153);">""</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( result == <span style="color: rgb(0, 102, 153);">"left"</span> ) move_robot( 1 , <span style="color: rgb(0, 102, 153);">"right"</span> , ( rcamnt * amount ) , <span style="color: rgb(0, 102, 153);">""</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// end of while</span><br>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// end of left</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;------------------------------&nbsp;&nbsp;</span><br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( sensor == <span style="color: rgb(0, 102, 153);">"right"</span> ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// measure side with 2 sensors</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> lcamnt = 40; <span style="color: rgb(126, 126, 126);">// amount to adjust turning left</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> rcamnt = 40; <span style="color: rgb(126, 126, 126);">// amount to adjust turning right</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">String</span> result = <span style="color: rgb(0, 102, 153);">""</span>; <span style="color: rgb(126, 126, 126);">// result of check</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> tcnt = 0; <span style="color: rgb(126, 126, 126);">// temp counter</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">while</span> ( result != <span style="color: rgb(0, 102, 153);">"straight"</span> &amp;&amp; tcnt &lt; 5 ) { <span style="color: rgb(126, 126, 126);">// adjust several times if required</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tcnt&nbsp;=&nbsp;tcnt&nbsp;+1;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// increment timout counter</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( tcnt &gt; 1 ) <span style="color: rgb(204, 102, 0);">delay</span> (200); <span style="color: rgb(126, 126, 126);">// wait for robot to stop turning</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// read the two measurements</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> camnt = 100; <span style="color: rgb(126, 126, 126);">// amount to adjust per cm out</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> usff = read_ultrasonics( <span style="color: rgb(0, 102, 153);">"front"</span> , 5 ); <span style="color: rgb(126, 126, 126);">// get readings from ultrasonic sensor</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(20);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> usfr = read_ultrasonics( <span style="color: rgb(0, 102, 153);">"right"</span> , 0 ); <span style="color: rgb(126, 126, 126);">// get readings from ultrasonic sensor</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;usff&nbsp;=&nbsp;usff&nbsp;+&nbsp;corectn;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// adjust for correction</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( usff == 0 ) usff = 999; <span style="color: rgb(126, 126, 126);">// if zero returned make it very large instead</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( usfr == 0 ) usfr = 999; <span style="color: rgb(126, 126, 126);">// if zero returned make it very large instead</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;=&nbsp;<span style="color: rgb(0, 102, 153);">"straight"</span>; <span style="color: rgb(126, 126, 126);">// result of check</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> amount = 0; <span style="color: rgb(126, 126, 126);">//amount out of square</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;usfr&nbsp;=&nbsp;usfr&nbsp;+&nbsp;16;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// adjust for different locations</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( usfr &gt; usff) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// robot pointing right</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;=&nbsp;<span style="color: rgb(0, 102, 153);">"right"</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;amount&nbsp;=&nbsp;usfr&nbsp;-&nbsp;usff;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( usff &gt; usfr) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// robot pointing left</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;=&nbsp;<span style="color: rgb(0, 102, 153);">"left"</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;amount&nbsp;=&nbsp;usff&nbsp;-&nbsp;usfr;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( amount &gt; 3 ) amount = 3; <span style="color: rgb(126, 126, 126);">// Make sure amount isn't too great</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcdshow(&nbsp;<span style="color: rgb(0, 102, 153);">"correct_u right"</span> , <span style="color: rgb(0, 102, 153);">"f="</span> + <span style="color: rgb(204, 102, 0);">String</span>(usff) + <span style="color: rgb(0, 102, 153);">" r="</span> + <span style="color: rgb(204, 102, 0);">String</span>(usfr) );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(200);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// make adjustment</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( result == <span style="color: rgb(0, 102, 153);">"right"</span> ) move_robot( 1 , <span style="color: rgb(0, 102, 153);">"left"</span> , ( lcamnt * amount ) , <span style="color: rgb(0, 102, 153);">""</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( result == <span style="color: rgb(0, 102, 153);">"left"</span> ) move_robot( 1 , <span style="color: rgb(0, 102, 153);">"right"</span> , ( rcamnt * amount ) , <span style="color: rgb(0, 102, 153);">""</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">//while</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">//if-right</span><br>&nbsp;&nbsp;<br>}&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">//correct_u</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;---------------------------------------------------------</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;debounce&nbsp;cup&nbsp;on&nbsp;platform&nbsp;sensor</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;returns&nbsp;either&nbsp;on&nbsp;or&nbsp;off</span><br><span style="color: rgb(204, 102, 0);">String</span> readcup() {<br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">String</span> res = <span style="color: rgb(0, 102, 153);">"off"</span>; <span style="color: rgb(126, 126, 126);">// default result</span><br>&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// see if cup is on platform</span><br>&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( <span style="color: rgb(204, 102, 0);">digitalRead</span>(cup) == <span style="color: rgb(0, 102, 153);">LOW</span> ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// cup on platform so debounce to make sure</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(20);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( <span style="color: rgb(204, 102, 0);">digitalRead</span>(cup) == <span style="color: rgb(0, 102, 153);">LOW</span> ) res = <span style="color: rgb(0, 102, 153);">"on"</span>;<br>&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">return</span> res;<br>}<br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;---------------------------------------------------------</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;display&nbsp;error&nbsp;message&nbsp;on&nbsp;lcd&nbsp;and&nbsp;stop</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;input&nbsp;is&nbsp;3&nbsp;strings&nbsp;-&nbsp;title&nbsp;for&nbsp;line&nbsp;1&nbsp;plus&nbsp;2&nbsp;strings&nbsp;to&nbsp;be&nbsp;displayed&nbsp;on&nbsp;line&nbsp;2</span><br><span style="color: rgb(204, 102, 0);">void</span> error( <span style="color: rgb(204, 102, 0);">String</span> title , <span style="color: rgb(204, 102, 0);">String</span> linea , <span style="color: rgb(204, 102, 0);">String</span> lineb ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;robot_error&nbsp;=&nbsp;<span style="color: rgb(204, 102, 0);">true</span>; <span style="color: rgb(126, 126, 126);">// flag error state</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stop_robot();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// stop</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcdshow(&nbsp;title&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">""</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;warning_sound&nbsp;(3);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">while</span> ( 1 == 1 ) { <span style="color: rgb(126, 126, 126);">// stop</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// display info on line 2</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcdshow(&nbsp;<span style="color: rgb(0, 102, 153);">""</span> , linea );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span> (800);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcdshow(&nbsp;<span style="color: rgb(0, 102, 153);">""</span> , lineb );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span> (800);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;<br>}<br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;---------------------------------------------------------</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;scan&nbsp;left&nbsp;or&nbsp;right&nbsp;with&nbsp;front&nbsp;ultrasound&nbsp;sensor&nbsp;to&nbsp;find&nbsp;an&nbsp;object&nbsp;or&nbsp;gap&nbsp;(scan0)</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inputs:&nbsp;&nbsp;&nbsp;&nbsp;direction&nbsp;to&nbsp;scan&nbsp;&nbsp;(left&nbsp;or&nbsp;right)&nbsp;,&nbsp;gap&nbsp;or&nbsp;object&nbsp;,&nbsp;min&nbsp;distance&nbsp;to&nbsp;find&nbsp;,&nbsp;scan&nbsp;steps</span><br><span style="color: rgb(204, 102, 0);">int</span> scan ( <span style="color: rgb(204, 102, 0);">String</span> direct , <span style="color: rgb(204, 102, 0);">String</span> goro , <span style="color: rgb(204, 102, 0);">int</span> dist , <span style="color: rgb(204, 102, 0);">int</span> sstep) {<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> spos = 50; <span style="color: rgb(126, 126, 126);">// starting position</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( direct == <span style="color: rgb(0, 102, 153);">"right"</span> ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcdshow&nbsp;(&nbsp;<span style="color: rgb(0, 102, 153);">"scanning right"</span> , <span style="color: rgb(0, 102, 153);">" "</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;spos&nbsp;=&nbsp;130;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sstep&nbsp;=&nbsp;-sstep;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( direct = <span style="color: rgb(0, 102, 153);">"left"</span> ) lcdshow ( <span style="color: rgb(0, 102, 153);">"scanning left"</span> , <span style="color: rgb(0, 102, 153);">" "</span> );<br>&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// scan until distance less than "dist"</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> qtemp=999; <span style="color: rgb(126, 126, 126);">// temp store of reading</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> tflag = 0; <span style="color: rgb(126, 126, 126);">// flag</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">while</span> ( spos &lt;= 130 &amp;&amp; spos &gt;= 50 &amp;&amp; tflag == 0 ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myservo.<span style="color: rgb(204, 102, 0);">write</span>(spos);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(400); <span style="color: rgb(126, 126, 126);">// wait for sero to move</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;qtemp&nbsp;=&nbsp;ultrasonic_front.convert(ultrasonic_front.timing(),&nbsp;Ultrasonic::CM);&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( goro == <span style="color: rgb(0, 102, 153);">"gap"</span> and qtemp &gt; dist ) tflag = 1; <span style="color: rgb(126, 126, 126);">// found</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( goro == <span style="color: rgb(0, 102, 153);">"object"</span> and qtemp &lt; dist ) tflag = 1; <span style="color: rgb(126, 126, 126);">// found</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;spos&nbsp;=&nbsp;spos&nbsp;+&nbsp;sstep;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// increment position</span><br>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// end of while</span><br>&nbsp;&nbsp;&nbsp;&nbsp;myservo.<span style="color: rgb(204, 102, 0);">write</span>(90); <span style="color: rgb(126, 126, 126);">//return ultrasound sensor to front</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// return result</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;spos&nbsp;=&nbsp;spos&nbsp;-&nbsp;sstep;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( spos &lt; 50 ) spos = 50;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( spos &gt; 130 ) spos = 130;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcdshow&nbsp;(&nbsp;<span style="color: rgb(0, 102, 153);">""</span> , <span style="color: rgb(0, 102, 153);">"result="</span> + <span style="color: rgb(204, 102, 0);">String</span>(spos) );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">return</span> spos; <span style="color: rgb(126, 126, 126);">// return position</span><br>&nbsp;&nbsp;<br>}&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// end of scan</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;---------------------------------------------------------</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;scan&nbsp;left&nbsp;or&nbsp;right&nbsp;with&nbsp;front&nbsp;ultrasound&nbsp;sensor&nbsp;to&nbsp;find&nbsp;edge&nbsp;of&nbsp;a&nbsp;gap&nbsp;&nbsp;(scan1)</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inputs:&nbsp;&nbsp;&nbsp;&nbsp;direction&nbsp;to&nbsp;scan&nbsp;&nbsp;(left&nbsp;or&nbsp;right)&nbsp;,&nbsp;min&nbsp;distance&nbsp;to&nbsp;find&nbsp;,&nbsp;scan&nbsp;steps</span><br><span style="color: rgb(204, 102, 0);">int</span> cscan ( <span style="color: rgb(204, 102, 0);">String</span> direct , <span style="color: rgb(204, 102, 0);">int</span> dist , <span style="color: rgb(204, 102, 0);">int</span> sstep) {<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> spos = 90; <span style="color: rgb(126, 126, 126);">// starting position</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( direct == <span style="color: rgb(0, 102, 153);">"right"</span> ) lcdshow ( <span style="color: rgb(0, 102, 153);">"Gscanning right"</span> , <span style="color: rgb(0, 102, 153);">" "</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( direct = <span style="color: rgb(0, 102, 153);">"left"</span> ) lcdshow ( <span style="color: rgb(0, 102, 153);">"Gscanning left"</span> , <span style="color: rgb(0, 102, 153);">" "</span> );<br>&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// scan until distance less than "dist"</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> qtemp=999; <span style="color: rgb(126, 126, 126);">// temp store of reading</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">while</span> ( spos &lt;= 180 &amp;&amp; spos &gt;= 0 &amp;&amp; qtemp &gt; dist ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myservo.<span style="color: rgb(204, 102, 0);">write</span>(spos);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(400); <span style="color: rgb(126, 126, 126);">// wait for sero to move</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;qtemp&nbsp;=&nbsp;ultrasonic_front.convert(ultrasonic_front.timing(),&nbsp;Ultrasonic::CM);&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( direct == <span style="color: rgb(0, 102, 153);">"right"</span> ) spos = spos - sstep; <span style="color: rgb(126, 126, 126);">// increment position</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( direct == <span style="color: rgb(0, 102, 153);">"left"</span> ) spos = spos + sstep; <span style="color: rgb(126, 126, 126);">// increment position</span><br>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// end of while</span><br>&nbsp;&nbsp;&nbsp;&nbsp;myservo.<span style="color: rgb(204, 102, 0);">write</span>(90); <span style="color: rgb(126, 126, 126);">//return ultrasound sensor to front</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// return result</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;spos&nbsp;=&nbsp;spos&nbsp;-&nbsp;sstep;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( spos &lt; 0 ) spos = 0;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( spos &gt; 180 ) spos = 180;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcdshow&nbsp;(&nbsp;<span style="color: rgb(0, 102, 153);">""</span> , <span style="color: rgb(0, 102, 153);">"result="</span> + <span style="color: rgb(204, 102, 0);">String</span>(spos) );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">return</span> spos; <span style="color: rgb(126, 126, 126);">// return position</span><br>&nbsp;&nbsp;<br>}&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// end of scan</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;---------------------------------------------------------</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;Check&nbsp;distance&nbsp;left&nbsp;or&nbsp;right&nbsp;is&nbsp;correct&nbsp;after&nbsp;a&nbsp;turn&nbsp;and&nbsp;adjust&nbsp;if&nbsp;not&nbsp;(tadjust1)</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;inputs&nbsp;=&nbsp;direction&nbsp;,&nbsp;expected&nbsp;distance&nbsp;)</span><br><span style="color: rgb(204, 102, 0);">void</span> tadjust ( <span style="color: rgb(204, 102, 0);">String</span> direct , <span style="color: rgb(204, 102, 0);">int</span> dist ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;lcdshow&nbsp;(&nbsp;<span style="color: rgb(0, 102, 153);">"adjust dist"</span> , <span style="color: rgb(204, 102, 0);">String</span> (dist) ) ;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">for</span> ( <span style="color: rgb(204, 102, 0);">int</span> i = 0 ; i &lt; 4 ; i++) { <span style="color: rgb(126, 126, 126);">// check 3 times</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(300); <span style="color: rgb(126, 126, 126);">// wait for robot to stop moving</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> tempus = read_ultrasonics( direct , 90 ); <span style="color: rgb(126, 126, 126);">// get readings from ultrasonic sensor</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( tempus &lt; dist &amp;&amp; direct == <span style="color: rgb(0, 102, 153);">"left"</span> ) move_robot( 7 , <span style="color: rgb(0, 102, 153);">"left"</span> , 20 , <span style="color: rgb(0, 102, 153);">""</span> ); <span style="color: rgb(126, 126, 126);">// kick left</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( tempus &gt; dist &amp;&amp; direct == <span style="color: rgb(0, 102, 153);">"left"</span> ) move_robot( 7 , <span style="color: rgb(0, 102, 153);">"right"</span> , 20 , <span style="color: rgb(0, 102, 153);">""</span> ); <span style="color: rgb(126, 126, 126);">// kick right</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( tempus &lt; dist &amp;&amp; direct == <span style="color: rgb(0, 102, 153);">"right"</span> ) move_robot( 7 , <span style="color: rgb(0, 102, 153);">"right"</span> , 20 , <span style="color: rgb(0, 102, 153);">""</span> ); <span style="color: rgb(126, 126, 126);">// kick left</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( tempus &gt; dist &amp;&amp; direct == <span style="color: rgb(0, 102, 153);">"right"</span> ) move_robot( 7 , <span style="color: rgb(0, 102, 153);">"left"</span> , 20 , <span style="color: rgb(0, 102, 153);">""</span> ); <span style="color: rgb(126, 126, 126);">// kick right</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( tempus &lt; dist &amp;&amp; direct == <span style="color: rgb(0, 102, 153);">"front"</span> ) move_robot( 7 , <span style="color: rgb(0, 102, 153);">"reverse"</span> , 20 , <span style="color: rgb(0, 102, 153);">""</span> ); <span style="color: rgb(126, 126, 126);">// kick back</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( tempus &gt; dist &amp;&amp; direct == <span style="color: rgb(0, 102, 153);">"front"</span> ) move_robot( 7 , <span style="color: rgb(0, 102, 153);">"forward"</span> , 20 , <span style="color: rgb(0, 102, 153);">""</span> ); <span style="color: rgb(126, 126, 126);">// kick forward</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>}&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// end of tadjust</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;---------------------------------------------------------</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;move&nbsp;from&nbsp;table&nbsp;to&nbsp;Library&nbsp;door&nbsp;(TTL)</span><br><span style="color: rgb(204, 102, 0);">void</span> move_TableToLib() {<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> tempus = 0; <span style="color: rgb(126, 126, 126);">// store temp ultrasound readings</span><br>&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// make sure location is correct</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( location != <span style="color: rgb(0, 102, 153);">"table"</span> ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// not at table</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;error(&nbsp;<span style="color: rgb(0, 102, 153);">"ERROR (ttld)"</span> , <span style="color: rgb(0, 102, 153);">"not at table"</span> , <span style="color: rgb(0, 102, 153);">" "</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// check the robot is in the correct starting position</span><br>&nbsp;&nbsp;&nbsp;&nbsp;tempus&nbsp;=&nbsp;read_ultrasonics(&nbsp;<span style="color: rgb(0, 102, 153);">"front"</span> , 90 ); <span style="color: rgb(126, 126, 126);">// get readings from ultrasonic sensor</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( tempus &gt; 14 ) error( <span style="color: rgb(0, 102, 153);">"ERROR (tab2vend)"</span> , <span style="color: rgb(0, 102, 153);">"not at table"</span> , <span style="color: rgb(0, 102, 153);">"front="</span> + <span style="color: rgb(204, 102, 0);">String</span>(tempus) + <span style="color: rgb(0, 102, 153);">"cm"</span> );<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;lcdshow(&nbsp;<span style="color: rgb(0, 102, 153);">"About to move!"</span> , <span style="color: rgb(0, 102, 153);">"leaving table"</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;warning_sound(2);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// sound warning</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(ledr, <span style="color: rgb(0, 102, 153);">HIGH</span>); <span style="color: rgb(126, 126, 126);">// warning led on</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// from coffee table to vending machine </span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;7&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"reverse"</span> , mcm * 30 , <span style="color: rgb(0, 102, 153);">""</span> ); <span style="color: rgb(126, 126, 126);">// reverse away from table </span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;correct_u(&nbsp;<span style="color: rgb(0, 102, 153);">"front"</span> , 0 ); <span style="color: rgb(126, 126, 126);">// make sure parallel to coffee table</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;7&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"right"</span> , mturn / 2 , <span style="color: rgb(0, 102, 153);">""</span> ); <span style="color: rgb(126, 126, 126);">// about turn</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;7&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"forward"</span> , mcm * 50 , <span style="color: rgb(0, 102, 153);">"left"</span> ); <span style="color: rgb(126, 126, 126);">// forward towards wall</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;correct_u(&nbsp;<span style="color: rgb(0, 102, 153);">"front"</span> , 0 ); <span style="color: rgb(126, 126, 126);">// make sure square on to wall</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;2&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"forward"</span> , 30 , <span style="color: rgb(0, 102, 153);">"front"</span> ); <span style="color: rgb(126, 126, 126);">// move to wall </span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;7&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"right"</span> , mturn / 4 , <span style="color: rgb(0, 102, 153);">""</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;6&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"forward"</span> , mcm * 75 , <span style="color: rgb(0, 102, 153);">"left"</span> ); <span style="color: rgb(126, 126, 126);">// follow wall out of parlour</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// out of parlour and down corridor</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;warning_sound(2);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// sound warning</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;2&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"forward"</span> , 35 , <span style="color: rgb(0, 102, 153);">"front"</span> ); <span style="color: rgb(126, 126, 126);">// out of parlour door</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;7&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"left"</span> , (mturn / 4) - 300 , <span style="color: rgb(0, 102, 153);">""</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;correct_u(&nbsp;<span style="color: rgb(0, 102, 153);">"right"</span> , 0 ); <span style="color: rgb(126, 126, 126);">// make sure parallel to wall</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;7&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"forward"</span> , mcm * 20 , <span style="color: rgb(0, 102, 153);">""</span> ); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;5&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"forward"</span> , 30 , <span style="color: rgb(0, 102, 153);">"left"</span> ); <span style="color: rgb(126, 126, 126);">// forward until left is less than 30 (get fix at door frame)</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// check door frame is expcted distance</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tempus&nbsp;=&nbsp;read_ultrasonics(&nbsp;<span style="color: rgb(0, 102, 153);">"left"</span> , 0 ); <span style="color: rgb(126, 126, 126);">// get readings from ultrasonic sensor</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( tempus &lt;= 7 ) move_robot( 1 , <span style="color: rgb(0, 102, 153);">"right"</span> , 30 , <span style="color: rgb(0, 102, 153);">""</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;7&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"forward"</span> , mcm * 40 , <span style="color: rgb(0, 102, 153);">""</span> ); <span style="color: rgb(126, 126, 126);">// down corridor</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;correct_u(&nbsp;<span style="color: rgb(0, 102, 153);">"right"</span> , -1 ); <span style="color: rgb(126, 126, 126);">// make sure parallel to wall</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;7&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"left"</span> , mturn / 4 , <span style="color: rgb(0, 102, 153);">""</span> ); <span style="color: rgb(126, 126, 126);">// left to face library </span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// into Library</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;5&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"forward"</span> , 35 , <span style="color: rgb(0, 102, 153);">"left"</span> ); <span style="color: rgb(126, 126, 126);">// get fix at door frame</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;7&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"forward"</span> , mcm * 5 , <span style="color: rgb(0, 102, 153);">""</span> ); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;correct_u(&nbsp;<span style="color: rgb(0, 102, 153);">"left"</span> , -1 ); <span style="color: rgb(126, 126, 126);">// make sure parallel to wall</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// If too close to the wall give a kick to the right</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tempus&nbsp;=&nbsp;read_ultrasonics(&nbsp;<span style="color: rgb(0, 102, 153);">"left"</span> , 0 ); <span style="color: rgb(126, 126, 126);">// get readings from ultrasonic sensor</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( tempus &lt; 17 ) move_robot( 1 , <span style="color: rgb(0, 102, 153);">"right"</span> , 210 , <span style="color: rgb(0, 102, 153);">""</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;7&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"forward"</span> , mcm * 35 , <span style="color: rgb(0, 102, 153);">""</span> ); <span style="color: rgb(126, 126, 126);">//into library</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// If too close to the wall give a kick to the right</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tempus&nbsp;=&nbsp;read_ultrasonics(&nbsp;<span style="color: rgb(0, 102, 153);">"left"</span> , 0 ); <span style="color: rgb(126, 126, 126);">// get readings from ultrasonic sensor</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( tempus &lt; 24 ) move_robot( 1 , <span style="color: rgb(0, 102, 153);">"right"</span> , 130 , <span style="color: rgb(0, 102, 153);">""</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( tempus &lt; 14 ) move_robot( 1 , <span style="color: rgb(0, 102, 153);">"right"</span> , 130 , <span style="color: rgb(0, 102, 153);">""</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;2&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"forward"</span> , 55 , <span style="color: rgb(0, 102, 153);">"front"</span> ); <span style="color: rgb(126, 126, 126);">// up to side of vending machine</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;correct_u(&nbsp;<span style="color: rgb(0, 102, 153);">"left"</span> , 0 ); <span style="color: rgb(126, 126, 126);">// make sure parallel to wall</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;2&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"forward"</span> , 45 , <span style="color: rgb(0, 102, 153);">"front"</span> ); <span style="color: rgb(126, 126, 126);">// up to side of vending machine</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// finished</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(ledr, <span style="color: rgb(0, 102, 153);">LOW</span>); <span style="color: rgb(126, 126, 126);">// warning led off</span><br>}<br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;---------------------------------------------------------</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;move&nbsp;from&nbsp;Library&nbsp;to&nbsp;vending&nbsp;machine&nbsp;(ltv)</span><br><span style="color: rgb(204, 102, 0);">void</span> move_LibToVend() {<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> tempus = 0; <span style="color: rgb(126, 126, 126);">// store temp ultrasound readings</span><br>&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;lcdshow(&nbsp;<span style="color: rgb(0, 102, 153);">"About to move!"</span> , <span style="color: rgb(0, 102, 153);">"Into Lib."</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(ledr, <span style="color: rgb(0, 102, 153);">HIGH</span>); <span style="color: rgb(126, 126, 126);">// warning led on</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// turn amount depending on distance from wall</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tempus&nbsp;=&nbsp;read_ultrasonics(&nbsp;<span style="color: rgb(0, 102, 153);">"left"</span> , 0 ); <span style="color: rgb(126, 126, 126);">// get readings from ultrasonic sensor</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> tmes = ( mturn / 5.6 ); <span style="color: rgb(126, 126, 126);">// amount to turn</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( tempus &lt; 23 ) tmes = tmes + 600; <span style="color: rgb(126, 126, 126);">// turn a bit more if close to wall</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">else</span> <span style="color: rgb(204, 102, 0);">if</span> ( tempus &gt; 35 ) tmes = tmes - 600; <span style="color: rgb(126, 126, 126);">// turn a bit less if far from wall</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;7&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"right"</span> , tmes , <span style="color: rgb(0, 102, 153);">""</span> ); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;7&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"forward"</span> , mcm * ( 105 - tempus ) , <span style="color: rgb(0, 102, 153);">""</span> ); <span style="color: rgb(126, 126, 126);">// adjust for distance from back wall</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;7&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"left"</span> , tmes , <span style="color: rgb(0, 102, 153);">""</span> ); <span style="color: rgb(126, 126, 126);">// turn back to parallel to back wall</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;7&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"forward"</span> , mcm * 20 , <span style="color: rgb(0, 102, 153);">""</span> ); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;2&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"forward"</span> , 140 , <span style="color: rgb(0, 102, 153);">"front"</span> ); <span style="color: rgb(126, 126, 126);">// in front of vending machine</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// make sure correct distance from wall</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> qdis = 121; <span style="color: rgb(126, 126, 126);">// distance to find</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> qtime = 0; <span style="color: rgb(126, 126, 126);">// timeout</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tempus&nbsp;=&nbsp;read_ultrasonics(&nbsp;<span style="color: rgb(0, 102, 153);">"front"</span> , 90 ); <span style="color: rgb(126, 126, 126);">// get readings from ultrasonic sensor</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">while</span> ( ( tempus &lt; (qdis - 1) || tempus &gt; (qdis) ) &amp;&amp; qtime &lt; 30 ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;qtime&nbsp;=&nbsp;qtime&nbsp;+&nbsp;1;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// increment timeout counter</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( tempus &gt; qdis ) move_robot( 7 , <span style="color: rgb(0, 102, 153);">"forward"</span> , -10 , <span style="color: rgb(0, 102, 153);">""</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( tempus &lt; qdis ) move_robot( 7 , <span style="color: rgb(0, 102, 153);">"reverse"</span> , -10 , <span style="color: rgb(0, 102, 153);">""</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(300);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tempus&nbsp;=&nbsp;read_ultrasonics(&nbsp;<span style="color: rgb(0, 102, 153);">"front"</span> , 90 ); <span style="color: rgb(126, 126, 126);">// get readings from ultrasonic sensor</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// check for failure</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( qtime &gt;= 30 ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;error(&nbsp;<span style="color: rgb(0, 102, 153);">"ERROR (find)"</span> , <span style="color: rgb(0, 102, 153);">"timed out"</span> , <span style="color: rgb(0, 102, 153);">"vender find"</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;7&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"left"</span> , (mturn / 4) - 500 , <span style="color: rgb(0, 102, 153);">""</span> ); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span> (500); <span style="color: rgb(126, 126, 126);">// wait for robot to stop before taking readings</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;correct_u(&nbsp;<span style="color: rgb(0, 102, 153);">"front"</span> , 0 ); <span style="color: rgb(126, 126, 126);">// make sure square on to vending machine</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myservo.<span style="color: rgb(204, 102, 0);">write</span>(90); <span style="color: rgb(126, 126, 126);">// make sure front servo pointing forward to avoid hitting machine</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;2&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"forward"</span> , -4 , <span style="color: rgb(0, 102, 153);">"front"</span> ); <span style="color: rgb(126, 126, 126);">// move forward into vending machine</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;1&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"forward"</span> , -500 , <span style="color: rgb(0, 102, 153);">""</span> ); <span style="color: rgb(126, 126, 126);">// into vending machine</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;location&nbsp;=&nbsp;<span style="color: rgb(0, 102, 153);">"vender"</span>; <span style="color: rgb(126, 126, 126);">// flag new location</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// finished</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(ledr, <span style="color: rgb(0, 102, 153);">LOW</span>); <span style="color: rgb(126, 126, 126);">// warning led off</span><br>}&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// end of proc</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;---------------------------------------------------------</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;move&nbsp;from&nbsp;vending&nbsp;machine&nbsp;to&nbsp;library&nbsp;door&nbsp;(vtld)</span><br><span style="color: rgb(204, 102, 0);">void</span> move_VendToLib() {<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> tempus = 0; <span style="color: rgb(126, 126, 126);">// store temp ultrasound readings</span><br>&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// check the robot is in the correct starting position</span><br>&nbsp;&nbsp;&nbsp;&nbsp;tempus&nbsp;=&nbsp;read_ultrasonics(&nbsp;<span style="color: rgb(0, 102, 153);">"front"</span> , 90 ); <span style="color: rgb(126, 126, 126);">// get readings from ultrasonic sensor</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( tempus &gt; 10 ) error( <span style="color: rgb(0, 102, 153);">"ERROR (vend2tab)"</span> , <span style="color: rgb(0, 102, 153);">"not at vender"</span> , <span style="color: rgb(0, 102, 153);">"front="</span> + <span style="color: rgb(204, 102, 0);">String</span>(tempus) + <span style="color: rgb(0, 102, 153);">"cm"</span> );<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// make sure location is correct</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( location != <span style="color: rgb(0, 102, 153);">"vender"</span> ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// not at table</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;error(&nbsp;<span style="color: rgb(0, 102, 153);">"ERROR (vtld)"</span> , <span style="color: rgb(0, 102, 153);">"not at vender"</span> , <span style="color: rgb(0, 102, 153);">" "</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;lcdshow(&nbsp;<span style="color: rgb(0, 102, 153);">"About to move!"</span> , <span style="color: rgb(0, 102, 153);">"leaving vender"</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;warning_sound(2);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// sound warning</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(ledr, <span style="color: rgb(0, 102, 153);">HIGH</span>); <span style="color: rgb(126, 126, 126);">// warning led on</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// from vending machine out of library </span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;3&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"reverse"</span> , -20 , <span style="color: rgb(0, 102, 153);">"front"</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;correct_u(&nbsp;<span style="color: rgb(0, 102, 153);">"front"</span> , 0 ); <span style="color: rgb(126, 126, 126);">// make sure square square to vending machine</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;3&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"reverse"</span> , -57 , <span style="color: rgb(0, 102, 153);">"front"</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;7&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"left"</span> , mturn / 5 , <span style="color: rgb(0, 102, 153);">""</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;2&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"left"</span> , 58 , <span style="color: rgb(0, 102, 153);">"right"</span> ); <span style="color: rgb(126, 126, 126);">// turn away from vending machine</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;7&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"forward"</span> , mcm * 20 , <span style="color: rgb(0, 102, 153);">""</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;2&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"forward"</span> , 68 , <span style="color: rgb(0, 102, 153);">"front"</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;7&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"right"</span> , mturn / 5 , <span style="color: rgb(0, 102, 153);">""</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// check position of gap</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> qtemp = 71; <span style="color: rgb(126, 126, 126);">// distance wanted</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tempus&nbsp;=&nbsp;scan&nbsp;(&nbsp;<span style="color: rgb(0, 102, 153);">"left"</span> , <span style="color: rgb(0, 102, 153);">"gap"</span> , qtemp , 3 ); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( tempus &gt; qtemp ) move_robot( 7 , <span style="color: rgb(0, 102, 153);">"left"</span> , 60 , <span style="color: rgb(0, 102, 153);">""</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( tempus &lt; qtemp ) move_robot( 7 , <span style="color: rgb(0, 102, 153);">"right"</span> , 60 , <span style="color: rgb(0, 102, 153);">""</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(300);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( tempus &gt; ( qtemp + 5 ) ) move_robot( 7 , <span style="color: rgb(0, 102, 153);">"left"</span> , 60 , <span style="color: rgb(0, 102, 153);">""</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( tempus &lt; ( qtemp - 6 ) ) move_robot( 7 , <span style="color: rgb(0, 102, 153);">"right"</span> , 60 , <span style="color: rgb(0, 102, 153);">""</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;7&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"forward"</span> , mcm * 70 , <span style="color: rgb(0, 102, 153);">""</span> ); <span style="color: rgb(126, 126, 126);">// go between door and vending machine </span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;2&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"forward"</span> , 35 , <span style="color: rgb(0, 102, 153);">"front"</span> ); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;7&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"left"</span> , mturn / 5.3 , <span style="color: rgb(0, 102, 153);">""</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;7&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"forward"</span> , mcm * 5 , <span style="color: rgb(0, 102, 153);">""</span> ); <span style="color: rgb(126, 126, 126);">// move farward slightly to get better ultrasound signal </span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// finished</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(ledr, <span style="color: rgb(0, 102, 153);">LOW</span>); <span style="color: rgb(126, 126, 126);">// warning led off</span><br>}&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// end of proc</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;---------------------------------------------------------</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;move&nbsp;from&nbsp;library&nbsp;to&nbsp;table&nbsp;(ltt)</span><br><span style="color: rgb(204, 102, 0);">void</span> move_LibToTable() {<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> tempus = 0; <span style="color: rgb(126, 126, 126);">// store temp ultrasound readings</span><br>&nbsp;&nbsp;&nbsp;&nbsp;lcdshow(&nbsp;<span style="color: rgb(0, 102, 153);">"About to move!"</span> , <span style="color: rgb(0, 102, 153);">"leaving Library"</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(ledr, <span style="color: rgb(0, 102, 153);">HIGH</span>); <span style="color: rgb(126, 126, 126);">// warning led on</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// out of library, down corridor and into parlour </span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;correct_u(&nbsp;<span style="color: rgb(0, 102, 153);">"right"</span> , 0 ); <span style="color: rgb(126, 126, 126);">// make sure parallel to wall</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;6&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"forward"</span> , mcm * 32 , <span style="color: rgb(0, 102, 153);">"right"</span> ); <span style="color: rgb(126, 126, 126);">// follow wall out of library</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;warning_sound(2);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// sound warning</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;2&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"forward"</span> , 50 , <span style="color: rgb(0, 102, 153);">"front"</span> ); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;7&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"right"</span> , mturn / 4 , <span style="color: rgb(0, 102, 153);">""</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;correct_u(&nbsp;<span style="color: rgb(0, 102, 153);">"left"</span> , 0 ); <span style="color: rgb(126, 126, 126);">// make sure parallel to wall</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;7&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"forward"</span> , mcm * 10 , <span style="color: rgb(0, 102, 153);">""</span> ); <span style="color: rgb(126, 126, 126);">// move forward a bit to avoid rear door frame</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;5&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"forward"</span> , 35 , <span style="color: rgb(0, 102, 153);">"right"</span> ); <span style="color: rgb(126, 126, 126);">// get fix at door frame</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;correct_u(&nbsp;<span style="color: rgb(0, 102, 153);">"left"</span> , 12 ); <span style="color: rgb(126, 126, 126);">// make sure parallel to wall</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// If too close to the wall give a kick to the right</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tempus&nbsp;=&nbsp;read_ultrasonics(&nbsp;<span style="color: rgb(0, 102, 153);">"left"</span> , 0 ); <span style="color: rgb(126, 126, 126);">// get readings from ultrasonic sensor</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( tempus &lt; 26 ) move_robot( 7 , <span style="color: rgb(0, 102, 153);">"right"</span> , 110 , <span style="color: rgb(0, 102, 153);">""</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;7&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"forward"</span> , mcm * 22 , <span style="color: rgb(0, 102, 153);">""</span> ); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// move 20cm and check going parallel to wall as not enough wall to follow</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tempus&nbsp;=&nbsp;read_ultrasonics(&nbsp;<span style="color: rgb(0, 102, 153);">"left"</span> , 0 ); <span style="color: rgb(126, 126, 126);">// get readings from ultrasonic sensor</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;7&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"forward"</span> , mcm * 20 , <span style="color: rgb(0, 102, 153);">""</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;correct_e(&nbsp;(tempus)&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"left"</span> , 30 ); <span style="color: rgb(126, 126, 126);">// adjust for any change </span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;7&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"right"</span> , (mturn / 4) , <span style="color: rgb(0, 102, 153);">""</span> ); <span style="color: rgb(126, 126, 126);">// facing into parlour</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// into parlour and upto coffee table </span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;7&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"forward"</span> , mcm * -65 , <span style="color: rgb(0, 102, 153);">""</span> ); <span style="color: rgb(126, 126, 126);">// move through doorway</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;correct_u(&nbsp;<span style="color: rgb(0, 102, 153);">"right"</span> , 0 ); <span style="color: rgb(126, 126, 126);">// make sure parallel to wall</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// check wall is expected distance, if not give kick to the left</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tempus&nbsp;=&nbsp;read_ultrasonics(&nbsp;<span style="color: rgb(0, 102, 153);">"right"</span> , 0 ); <span style="color: rgb(126, 126, 126);">// get readings from ultrasonic sensor</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( tempus &lt;= 10 ) move_robot( 1 , <span style="color: rgb(0, 102, 153);">"left"</span> , 30 , <span style="color: rgb(0, 102, 153);">""</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;4&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"forward"</span> , -40 , <span style="color: rgb(0, 102, 153);">"left"</span> ); <span style="color: rgb(126, 126, 126);">// get past speaker</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// move away from wall now in open space</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;7&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"left"</span> , (mturn / 12) , <span style="color: rgb(0, 102, 153);">""</span> ); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;7&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"forward"</span> , mcm * 32 , <span style="color: rgb(0, 102, 153);">""</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;7&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"right"</span> , (mturn / 12) , <span style="color: rgb(0, 102, 153);">""</span> ); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;6&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"forward"</span> , mcm * 29 , <span style="color: rgb(0, 102, 153);">"right"</span> ); <span style="color: rgb(126, 126, 126);">// follow parlour wall</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;correct_u(&nbsp;<span style="color: rgb(0, 102, 153);">"right"</span> , 0 ); <span style="color: rgb(126, 126, 126);">// make sure parallel to wall</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;7&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"left"</span> , (mturn / 4) - 500 , <span style="color: rgb(0, 102, 153);">""</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;2&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"forward"</span> , 70 , <span style="color: rgb(0, 102, 153);">"front"</span> ); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;correct_u(&nbsp;<span style="color: rgb(0, 102, 153);">"front"</span> , 0 ); <span style="color: rgb(126, 126, 126);">// make sure parallel to box</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;2&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"forward"</span> , 12 , <span style="color: rgb(0, 102, 153);">"front"</span> ); &nbsp;&nbsp;&nbsp;&nbsp;location&nbsp;=&nbsp;<span style="color: rgb(0, 102, 153);">"table"</span>; <span style="color: rgb(126, 126, 126);">// flag new location</span><br>&nbsp;&nbsp;&nbsp;&nbsp;underlights&nbsp;(&nbsp;1&nbsp;,&nbsp;8&nbsp;);&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// flash under body lights </span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// finished</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(ledr, <span style="color: rgb(0, 102, 153);">LOW</span>); <span style="color: rgb(126, 126, 126);">// warning led off</span><br>}&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// end of proc</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;---------------------------------------------------------</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;move&nbsp;from&nbsp;library&nbsp;door&nbsp;to&nbsp;parking&nbsp;space</span><br><span style="color: rgb(204, 102, 0);">void</span> move_LibDoorToPark() {<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> tempus = 0; <span style="color: rgb(126, 126, 126);">// store temp ultrasound readings</span><br>&nbsp;&nbsp;&nbsp;&nbsp;lcdshow(&nbsp;<span style="color: rgb(0, 102, 153);">"About to move!"</span> , <span style="color: rgb(0, 102, 153);">"parking"</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(ledr, <span style="color: rgb(0, 102, 153);">HIGH</span>); <span style="color: rgb(126, 126, 126);">// warning led on</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// Into Library</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;2&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"forward"</span> , 14 , <span style="color: rgb(0, 102, 153);">"front"</span> ); <span style="color: rgb(126, 126, 126);">// close to vender side</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;1&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"forward"</span> , -400 , <span style="color: rgb(0, 102, 153);">"front"</span> ); <span style="color: rgb(126, 126, 126);">// park</span><br>&nbsp;&nbsp;&nbsp;&nbsp;location&nbsp;=&nbsp;<span style="color: rgb(0, 102, 153);">"parked"</span>; <span style="color: rgb(126, 126, 126);">// flag new location</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// finished</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(ledr, <span style="color: rgb(0, 102, 153);">LOW</span>); <span style="color: rgb(126, 126, 126);">// warning led off</span><br>}&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// end of proc</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;---------------------------------------------------------</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;collect&nbsp;a&nbsp;drink</span><br><span style="color: rgb(204, 102, 0);">void</span> collectDrink() {<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;radiobutton&nbsp;=&nbsp;0;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// clear radio button pressed flag</span><br>&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcdshow(&nbsp;<span style="color: rgb(0, 102, 153);">"Off to collect"</span> , <span style="color: rgb(0, 102, 153);">"a drink...."</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// move from Parlour table to vending machine</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_TableToLib();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// move from table to Library Door</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_LibToVend();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// move from Library Door to Vender</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// wait for drink to dispense (24 seconds)</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcdshow(&nbsp;<span style="color: rgb(0, 102, 153);">"Waiting for"</span> , <span style="color: rgb(0, 102, 153);">"drink...."</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">for</span> ( <span style="color: rgb(204, 102, 0);">int</span> i = 0 ; i &lt; 47 ; i++) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(ledg, !<span style="color: rgb(204, 102, 0);">digitalRead</span>(ledg)); <span style="color: rgb(126, 126, 126);">// flash green led</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(500);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(ledg,<span style="color: rgb(0, 102, 153);">LOW</span>); <span style="color: rgb(126, 126, 126);">// make sure led is off</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcdshow(&nbsp;<span style="color: rgb(0, 102, 153);">" "</span> , <span style="color: rgb(0, 102, 153);">" "</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// Move from vending machine to Parlour table</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_VendToLib();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// move from vending machine to Library Door</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_LibToTable();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// move from Library Door to table</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// finished</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(ledr, <span style="color: rgb(0, 102, 153);">LOW</span>); <span style="color: rgb(126, 126, 126);">// warning led off</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;warning_sound(2);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcdshow(&nbsp;<span style="color: rgb(0, 102, 153);">"Finished"</span> , <span style="color: rgb(0, 102, 153);">" "</span> );<br>}&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// end of proc</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;---------------------------------------------------------</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;Move&nbsp;from&nbsp;parked&nbsp;to&nbsp;Parlour&nbsp;Table</span><br><span style="color: rgb(204, 102, 0);">void</span> move_ParkToTable() {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;radiobutton&nbsp;=&nbsp;0;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// clear radio button pressed flag</span><br>&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lcdshow(&nbsp;<span style="color: rgb(0, 102, 153);">"Off to Parlour"</span> , <span style="color: rgb(0, 102, 153);">"a drink !!!"</span> );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;warning_sound(2);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// sound warning</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// get to correct starting position</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;7&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"reverse"</span> , mcm * 30 , <span style="color: rgb(0, 102, 153);">""</span> ); <span style="color: rgb(126, 126, 126);">// reverse away from table </span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;correct_u(&nbsp;<span style="color: rgb(0, 102, 153);">"front"</span> , 0 ); <span style="color: rgb(126, 126, 126);">// make sure parallel to coffee table</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_robot(&nbsp;7&nbsp;,&nbsp;<span style="color: rgb(0, 102, 153);">"right"</span> , mturn / 2 , <span style="color: rgb(0, 102, 153);">""</span> ); <span style="color: rgb(126, 126, 126);">// about turn</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move_LibToTable();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>}&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// end of proc</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;---------------------------------------------------------</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;sequence&nbsp;on&nbsp;the&nbsp;under&nbsp;body&nbsp;lights</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;input&nbsp;=&nbsp;mode&nbsp;to&nbsp;use&nbsp;,&nbsp;duration&nbsp;</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;=&nbsp;kitt,&nbsp;&nbsp;2&nbsp;=&nbsp;random&nbsp;</span><br><span style="color: rgb(204, 102, 0);">void</span> underlights ( <span style="color: rgb(204, 102, 0);">int</span> sel , <span style="color: rgb(204, 102, 0);">int</span> dur ) {<br>&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// Kitt lights</span><br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( sel == 1 ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> stp = 30; <span style="color: rgb(126, 126, 126);">// delay</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">for</span> ( <span style="color: rgb(204, 102, 0);">int</span> j = 0 ; j &lt; dur ; j++ ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">for</span> ( <span style="color: rgb(204, 102, 0);">int</span> i = 0 ; i &lt; 6 ; i++) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(uleds[i],<span style="color: rgb(0, 102, 153);">HIGH</span>); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(stp);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(uleds[i],<span style="color: rgb(0, 102, 153);">LOW</span>); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// end for i</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">for</span> ( <span style="color: rgb(204, 102, 0);">int</span> i = 5 ; i &gt; 0 ; i=i-1) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(uleds[i],<span style="color: rgb(0, 102, 153);">HIGH</span>); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(stp);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(uleds[i],<span style="color: rgb(0, 102, 153);">LOW</span>); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// for i</span><br>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// for j</span><br>&nbsp;&nbsp;}&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// if</span><br>&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// random lights</span><br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">if</span> ( sel == 2 ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">int</span> stp = 30; <span style="color: rgb(126, 126, 126);">// delay</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">for</span> ( <span style="color: rgb(204, 102, 0);">int</span> i = 0 ; i &lt; dur ; i++ ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">for</span> ( <span style="color: rgb(204, 102, 0);">int</span> j = 0 ; j &lt; 6 ; j++) <span style="color: rgb(204, 102, 0);">digitalWrite</span>(uleds[j],<span style="color: rgb(0, 102, 153);">LOW</span>); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">digitalWrite</span>(uleds[<span style="color: rgb(204, 102, 0);">random</span>(6)],<span style="color: rgb(0, 102, 153);">HIGH</span>); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">delay</span>(stp);<br>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// for i</span><br>&nbsp;&nbsp;}&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// if</span><br>&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// all off</span><br>&nbsp;&nbsp;<span style="color: rgb(204, 102, 0);">for</span> ( <span style="color: rgb(204, 102, 0);">int</span> i = 0 ; i &lt; 6 ; i++) <span style="color: rgb(204, 102, 0);">digitalWrite</span>(uleds[i],<span style="color: rgb(0, 102, 153);">LOW</span>); &nbsp;&nbsp;<br>&nbsp;&nbsp;<br>}&nbsp;&nbsp;&nbsp;<span style="color: rgb(126, 126, 126);">// end of proc</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;---------------------------------------------------------</span><br><span style="color: rgb(126, 126, 126);">//&nbsp;&nbsp;the&nbsp;end</span>
</pre>
</body></html>